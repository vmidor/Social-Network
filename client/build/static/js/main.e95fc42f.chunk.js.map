{"version":3,"sources":["actions/types.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","utils/setAuthToken.js","store.js","utils/api.js","actions/alert.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/dashboard/DashboardActions.js","actions/profile.js","utils/formatDate.js","components/dashboard/Education.js","components/dashboard/Experience.js","components/dashboard/Dashboard.js","components/profile-forms/ProfileForm.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/layout/spinner.gif","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileEducation.js","components/profile/ProfileExperience.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT","GET_PROFILE","GET_PROFILES","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","GET_REPOS","NO_REPOS","ACCOUNT_DELETED","GET_POSTS","GET_POST","ADD_POST","DELETE_POST","POST_ERROR","UPDATE_LIKES","ADD_COMMENT","REMOVE_COMMENT","initialState","alertReducer","state","action","type","payload","filter","alert","id","token","localStorage","getItem","isAuthenticated","loading","user","authReducer","setItem","removeItem","profile","profiles","repos","error","profileReducer","posts","post","postReducer","_id","map","likes","comments","comment","combineReducers","auth","setAuthToken","api","defaults","headers","common","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","axios","create","baseURL","interceptors","response","use","res","err","status","dispatch","Promise","reject","setAlert","msg","alertType","timeout","uuidv4","setTimeout","loadUser","a","get","data","connect","logout","authLinks","to","className","onClick","href","guestLinks","Landing","register","formData","errors","forEach","useState","name","email","password","password2","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","require","required","minLength","login","body","alerts","DashboardActions","getCurrentProfile","statusText","formatDate","date","Intl","DateTimeFormat","format","Date","deleteEducation","delete","education","educations","edu","school","degree","from","deleteExperience","experience","experiences","exp","company","title","deleteAccount","window","confirm","useEffect","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","createProfile","history","edit","push","creatingProfile","useRouteMatch","displaySocialInputs","toggleSocialInputs","profileData","key","social","Array","isArray","join","addExperience","put","current","description","checked","disabled","cols","rows","addEducation","fieldofstudy","Spinner","src","spinner","style","width","margin","display","alt","ProfileItem","avatar","slice","skill","index","getProfiles","length","ProfileTop","rel","Object","entries","ProfileAbout","trim","split","ProfileEducation","ProfileExperience","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","showActions","defaultProps","addPost","setText","getPosts","addComment","postId","deleteComment","commentId","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","ProfileForm","AddExperience","AddEducation","Posts","Post","App","addEventListener","ReactDOM","StrictMode","document","getElementById"],"mappings":"+PAAaA,EAAY,YACZC,EAAe,eAEfC,EAAmB,mBAInBC,EAAc,cACdC,EAAa,aAGbC,EAAgB,gBAEhBC,EAAS,SAGTC,EAAc,cACdC,EAAe,eACfC,EAAgB,gBAChBC,EAAgB,gBAChBC,EAAiB,iBAGjBC,EAAY,YACZC,EAAW,WAEXC,EAAkB,kBAGlBC,EAAY,YACZC,EAAW,WACXC,EAAW,WACXC,EAAc,cACdC,EAAa,aAEbC,EAAe,eAGfC,EAAc,cACdC,EAAiB,iBCrCxBC,EAAe,GAeNC,MAbf,WAAqD,IAA/BC,EAA8B,uDAAtBF,EAAcG,EAAQ,uCAC1CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAK3B,EACH,MAAM,GAAN,mBAAWyB,GAAX,CAAkBG,IACpB,KAAK3B,EACH,OAAOwB,EAAMI,QAAO,SAACC,GAAD,OAAWA,EAAMC,KAAOH,KAC9C,QACE,OAAOH,I,OCAPF,EAAe,CACnBS,MAAOC,aAAaC,QAAQ,SAC5BC,gBAAiB,KACjBC,SAAS,EACTC,KAAM,MAsCOC,MAnCf,WAAoD,IAA/Bb,EAA8B,uDAAtBF,EAAcG,EAAQ,uCACzCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKxB,EACH,OAAO,2BACFsB,GADL,IAEEU,iBAAiB,EACjBC,SAAS,EACTC,KAAMT,IAEV,KAAK1B,EACL,KAAKG,EAEH,OADA4B,aAAaM,QAAQ,QAASX,EAAQI,OAC/B,uCACFP,GACAG,GAFL,IAGEO,iBAAiB,EACjBC,SAAS,IAEb,KAAKtB,EACL,KAAKV,EACL,KAAKE,EAEH,OADA2B,aAAaO,WAAW,SACjB,2BACFf,GADL,IAEEO,MAAO,KACPG,iBAAiB,EACjBC,SAAS,EACTC,KAAM,OAEV,QACE,OAAOZ,IC1CPF,EAAe,CACnBkB,QAAS,KACTC,SAAU,GACVC,MAAO,GACPP,SAAS,EACTQ,MAAO,IAgDMC,MA7Cf,WAAuD,IAA/BpB,EAA8B,uDAAtBF,EAAcG,EAAQ,uCAC5CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAKpB,EACL,KAAKI,EACH,OAAO,2BACFc,GADL,IAEEgB,QAASb,EACTQ,SAAS,IAEb,KAAK5B,EACH,OAAO,2BACFiB,GADL,IAEEiB,SAAUd,EACVQ,SAAS,IAEb,KAAK3B,EACH,OAAO,2BACFgB,GADL,IAEEmB,MAAOhB,EACPQ,SAAS,EACTK,QAAS,OAEb,KAAK/B,EACH,OAAO,2BACFe,GADL,IAEEgB,QAAS,KACTE,MAAO,KAEX,KAAK/B,EACH,OAAO,2BACFa,GADL,IAEEkB,MAAOf,EACPQ,SAAS,IAEb,KAAKvB,EACH,OAAO,2BACFY,GADL,IAEEkB,MAAO,KAEX,QACE,OAAOlB,IChDPF,EAAe,CACnBuB,MAAO,GACPC,KAAM,KACNX,SAAS,EACTQ,MAAO,IAmEMI,MAhEf,WAAoD,IAA/BvB,EAA8B,uDAAtBF,EAAcG,EAAQ,uCACzCC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QAEd,OAAQD,GACN,KAAKZ,EACH,OAAO,2BACFU,GADL,IAEEqB,MAAOlB,EACPQ,SAAS,IAEb,KAAKpB,EACH,OAAO,2BACFS,GADL,IAEEsB,KAAMnB,EACNQ,SAAS,IAEb,KAAKnB,EACH,OAAO,2BACFQ,GADL,IAEEqB,MAAM,CAAElB,GAAH,mBAAeH,EAAMqB,QAC1BV,SAAS,IAEb,KAAKlB,EACH,OAAO,2BACFO,GADL,IAEEqB,MAAOrB,EAAMqB,MAAMjB,QAAO,SAACkB,GAAD,OAAUA,EAAKE,MAAQrB,KACjDQ,SAAS,IAEb,KAAKjB,EACH,OAAO,2BACFM,GADL,IAEEmB,MAAOhB,EACPQ,SAAS,IAEb,KAAKhB,EACH,OAAO,2BACFK,GADL,IAEEqB,MAAOrB,EAAMqB,MAAMI,KAAI,SAACH,GAAD,OACrBA,EAAKE,MAAQrB,EAAQG,GAArB,2BAA+BgB,GAA/B,IAAqCI,MAAOvB,EAAQuB,QAAUJ,KAEhEX,SAAS,IAEb,KAAKf,EACH,OAAO,2BACFI,GADL,IAEEsB,KAAK,2BAAMtB,EAAMsB,MAAb,IAAmBK,SAAUxB,IACjCQ,SAAS,IAEb,KAAKd,EACH,OAAO,2BACFG,GADL,IAEEsB,KAAK,2BACAtB,EAAMsB,MADP,IAEFK,SAAU3B,EAAMsB,KAAKK,SAASvB,QAC5B,SAACwB,GAAD,OAAaA,EAAQJ,MAAQrB,OAGjCQ,SAAS,IAEb,QACE,OAAOX,ICtEE6B,4BAAgB,CAC7BxB,QACAyB,OACAd,UACAM,SCCaS,EAVM,SAAAxB,GACfA,GACFyB,GAAIC,SAASC,QAAQC,OAAO,gBAAkB5B,EAC9CC,aAAaM,QAAQ,QAASP,YAEvByB,GAAIC,SAASC,QAAQC,OAAO,gBACnC3B,aAAaO,WAAW,WCDtBqB,EAAa,CAACC,KAEdC,GAAQC,sBACZC,EALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,KAIrCO,GAAeL,GAAMM,WAEzBN,GAAMO,WAAU,WACd,IAAIC,EAAgBH,GAGpB,GAFAA,GAAeL,GAAMM,WAEjBE,EAAchB,KAAKvB,QAAUoC,GAAab,KAAKvB,MAAO,CACxD,IAAMA,EAAQoC,GAAab,KAAKvB,MAChCwB,EAAaxB,OAIF+B,UCzBTN,GAAMe,IAAMC,OAAO,CACvBC,QAAS,OACTf,QAAS,CACP,eAAgB,sBAIpBF,GAAIkB,aAAaC,SAASC,KACxB,SAAAC,GAAG,OAAIA,KAAK,SAAAC,GAIV,OAH4B,MAAxBA,EAAIH,SAASI,QACfjB,GAAMkB,SAAS,CAAEtD,KAAMrB,IAElB4E,QAAQC,OAAOJ,MAIXtB,U,SChBF2B,GACX,SAACC,EAAKC,GAAN,IAAiBC,EAAjB,uDAA2B,IAA3B,OACE,SAACN,GACC,IAAMlD,EAAKyD,eACXP,EAAS,CACPtD,KAAM3B,EACN4B,QAAS,CAAEyD,MAAKC,YAAWvD,QAG7B0D,YACE,kBACER,EAAS,CACPtD,KAAM1B,EACN2B,QAASG,MAEbwD,KCNKG,GAAW,yDAAM,WAAMT,GAAN,eAAAU,EAAA,+EAERlC,GAAImC,IAAI,SAFA,OAEpBd,EAFoB,OAI1BG,EAAS,CACPtD,KAAMxB,EACNyB,QAASkD,EAAIe,OANW,gDAS1BZ,EAAS,CACPtD,KAAMvB,IAVkB,yDAAN,uD,QCkDT0F,gBAJS,SAACrE,GAAD,MAAY,CAClC8B,KAAM9B,EAAM8B,QAG0B,CAAEwC,ODWpB,iBAAO,CAAEpE,KAAMrB,KCXtBwF,EAzDA,SAAC,GAA2C,IAAjC3D,EAAgC,EAAxCoB,KAAQpB,gBAAmB4D,EAAa,EAAbA,OACrCC,EACJ,gCACE,8BACE,eAAC,IAAD,CAAMC,GAAG,YAAT,0BAEF,8BACE,eAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,8BACE,gBAAC,IAAD,CAAMA,GAAG,aAAT,UACE,oBAAGC,UAAU,gBAAiB,IAC9B,uBAAMA,UAAU,UAAhB,4BAEJ,8BACE,qBAAGC,QAASJ,EAAQK,KAAK,KAAzB,UACE,oBAAGF,UAAU,wBAAyB,IACtC,uBAAMA,UAAU,UAAhB,4BAKFG,EACJ,gCACE,8BACE,eAAC,IAAD,CAAMJ,GAAG,YAAT,0BAEF,8BACE,eAAC,IAAD,CAAMA,GAAG,YAAT,wBAEF,8BACE,eAAC,IAAD,CAAMA,GAAG,SAAT,wBAKN,OACE,uBAAKC,UAAU,iBAAf,UACE,8BACE,gBAAC,IAAD,CAAMD,GAAG,IAAT,UACE,oBAAGC,UAAU,gBADf,kBAIF,eAAC,WAAD,UAAW/D,EAAkB6D,EAAYK,UCrBhCC,GAxBC,WACd,OACE,0BAASJ,UAAU,UAAnB,SACE,sBAAKA,UAAU,eAAf,SACE,uBAAKA,UAAU,gBAAf,UACE,qBAAIA,UAAU,UAAd,iCACA,oBAAGA,UAAU,OAAb,kGAIA,uBAAKA,UAAU,UAAf,UACE,eAAC,IAAD,CAAMD,GAAG,YAAYC,UAAU,kBAA/B,qBAGA,eAAC,IAAD,CAAMD,GAAG,SAASC,UAAU,gBAA5B,8B,iBCuFGJ,gBAHS,SAACrE,GAAD,MAAY,CAClCU,gBAAiBV,EAAM8B,KAAKpB,mBAEU,CAAEiD,YAAUmB,SH5E5B,SAAAC,GAAQ,8CAAI,WAAMvB,GAAN,iBAAAU,EAAA,+EAEdlC,GAAIV,KAAK,SAAUyD,GAFL,OAE1B1B,EAF0B,OAGhCG,EAAS,CACPtD,KAAMzB,EACN0B,QAASkD,EAAIe,OAEfZ,EAASS,MAPuB,iDAS1Be,EAAS,KAAI7B,SAASiB,KAAKY,SAG/BA,EAAOC,SAAQ,SAAA9D,GAAK,OAAIqC,EAASG,GAASxC,EAAMyC,IAAK,cAGvDJ,EAAS,CACPtD,KVzCuB,kBUyBO,yDAAJ,wDG4EjBmE,EAhGE,SAAC,GAA6C,IAA3CV,EAA0C,EAA1CA,SAAUmB,EAAgC,EAAhCA,SAAUpE,EAAsB,EAAtBA,gBACtC,EAAgCwE,mBAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,UAAW,KAJb,oBAAOP,EAAP,KAAiBQ,EAAjB,KAOQJ,EAAqCJ,EAArCI,KAAMC,EAA+BL,EAA/BK,MAAOC,EAAwBN,EAAxBM,SAAUC,EAAcP,EAAdO,UAEzBE,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKR,GAAN,mBAAiBU,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAEjDC,EAAQ,uCAAG,WAAOH,GAAP,SAAAvB,EAAA,sDACfuB,EAAEI,iBACER,IAAaC,EACf3B,EAAS,yBAA0B,UAEnCmB,EAAS,CAAEK,OAAMC,QAAOC,aALX,2CAAH,sDASd,OAAI3E,EACK,eAAC,IAAD,CAAU8D,GAAG,eAGpB,gBAAC,WAAD,WACE,qBAAIC,UAAU,qBAAd,qBACA,qBAAGA,UAAU,OAAb,UACE,oBAAGA,UAAU,gBADf,0BAGA,wBAAMA,UAAU,OAAOmB,SAAUA,EAAjC,UACE,sBAAKnB,UAAU,aAAf,SACE,wBACEvE,KAAK,OACL4F,YAAY,OACZX,KAAK,OACLQ,MAAOR,EACPK,SAAUA,EACVO,SAAO,MAIX,uBAAKtB,UAAU,aAAf,UACE,wBACEvE,KAAK,QACL4F,YAAY,gBACZX,KAAK,QACLQ,MAAOP,EACPI,SAAUA,EACVQ,UAAQ,IAEV,wBAAOvB,UAAU,YAAjB,6FAMF,sBAAKA,UAAU,aAAf,SACE,wBACEvE,KAAK,WACL4F,YAAY,WACZX,KAAK,WACLc,UAAU,IACVN,MAAON,EACPG,SAAUA,EACVQ,UAAQ,MAGZ,sBAAKvB,UAAU,aAAf,SACE,wBACEvE,KAAK,WACL4F,YAAY,mBACZX,KAAK,YACLc,UAAU,IACVN,MAAOL,EACPE,SAAUA,EACVQ,UAAQ,MAGZ,wBAAO9F,KAAK,SAASuE,UAAU,kBAAkBkB,MAAM,gBAEzD,qBAAGlB,UAAU,OAAb,sCAC2B,eAAC,IAAD,CAAMD,GAAG,SAAT,8BChBlBH,gBAJS,SAAArE,GAAK,MAAK,CAChCU,gBAAiBV,EAAM8B,KAAKpB,mBAGU,CAAEwF,MJzBrB,SAACd,EAAOC,GAAR,8CAAqB,WAAM7B,GAAN,mBAAAU,EAAA,6DAClCiC,EAAO,CAAEf,QAAOC,YADkB,kBAIpBrD,GAAIV,KAAK,QAAS6E,GAJE,OAIhC9C,EAJgC,OAKtCG,EAAS,CACPtD,KAAMtB,EACNuB,QAASkD,EAAIe,OAEfZ,EAASS,MAT6B,iDAWhCe,EAAS,KAAI7B,SAASiB,KAAKY,SAG/BA,EAAOC,SAAQ,SAAA9D,GAAK,OAAIqC,EAASG,GAASxC,EAAMyC,IAAK,cAEvDJ,EAAS,CACPtD,KVxDoB,eUuCgB,yDAArB,wDIyBNmE,EAtED,SAAC,GAAgC,IAA9B6B,EAA6B,EAA7BA,MAAOxF,EAAsB,EAAtBA,gBACtB,EAAgCwE,mBAAS,CACvCE,MAAO,GACPC,SAAU,KAFZ,oBAAON,EAAP,KAAiBQ,EAAjB,KAKQH,EAAoBL,EAApBK,MAAOC,EAAaN,EAAbM,SAETG,EAAW,SAAAC,GAAC,OAChBF,EAAY,2BAAKR,GAAN,mBAAiBU,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAEjDC,EAAQ,uCAAG,WAAOH,GAAP,SAAAvB,EAAA,sDACfuB,EAAEI,iBAEFK,EAAMd,EAAOC,GAHE,2CAAH,sDAMd,OAAI3E,EACK,eAAC,IAAD,CAAU8D,GAAG,eAGpB,gBAAC,WAAD,WACE,qBAAIC,UAAU,qBAAd,qBACA,qBAAGA,UAAU,OAAb,UACE,oBAAGA,UAAU,gBADf,6BAGA,wBAAMA,UAAU,OAAOmB,SAAUA,EAAjC,UAGE,sBAAKnB,UAAU,aAAf,SACE,wBACEvE,KAAK,QACL4F,YAAY,gBACZX,KAAK,QACLQ,MAAOP,EACPI,SAAUA,EACVQ,UAAQ,MAIZ,sBAAKvB,UAAU,aAAf,SACE,wBACEvE,KAAK,WACL4F,YAAY,WACZX,KAAK,WACLc,UAAU,IACVN,MAAON,EACPG,SAAUA,EACVQ,UAAQ,MAIZ,wBAAO9F,KAAK,SAASuE,UAAU,kBAAkBkB,MAAM,aAEzD,qBAAGlB,UAAU,OAAb,oCACyB,eAAC,IAAD,CAAMD,GAAG,YAAT,8BC1ChBH,gBAJS,SAACrE,GAAD,MAAY,CAClCoG,OAAQpG,EAAMK,SAGDgE,EAfD,SAAC,GAAD,SAAG+B,OACR3E,KAAI,SAACpB,GAAD,OACT,sBAAoBoE,UAAS,sBAAiBpE,EAAMwD,WAApD,SACGxD,EAAMuD,KADCvD,EAAMC,UCYL+F,GAfU,WACvB,OACE,uBAAK5B,UAAU,eAAf,UACE,gBAAC,IAAD,CAAMD,GAAG,gBAAgBC,UAAU,gBAAnC,UACC,oBAAGA,UAAU,oCADd,mBAGA,gBAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,gBAArC,UACC,oBAAGA,UAAU,kCADd,qBAIA,gBAAC,IAAD,CAAMD,GAAG,iBAAiBC,UAAU,gBAApC,UACC,oBAAGA,UAAU,uCADd,wBCEO6B,GAAoB,yDAAM,WAAO9C,GAAP,eAAAU,EAAA,+EAEjBlC,GAAImC,IAAI,eAFS,OAE7Bd,EAF6B,OAInCG,EAAS,CACPtD,KAAMpB,EACNqB,QAASkD,EAAIe,OANoB,gDASnCZ,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAX7B,yDAAN,uDCXlBiD,OAJf,SAAoBC,GAClB,OAAO,IAAIC,KAAKC,gBAAiBC,OAAO,IAAIC,KAAKJ,KC+CpCpC,eAAQ,KAAM,CAAEyC,gBF0IA,SAACxG,GAAD,8CAAQ,WAAOkD,GAAP,eAAAU,EAAA,+EAEjBlC,GAAI+E,OAAJ,6BAAiCzG,IAFhB,OAE7B+C,EAF6B,OAInCG,EAAS,CACPtD,KAAMhB,EACNiB,QAASkD,EAAIe,OAGfZ,EAASG,GAAS,oBAAqB,YATJ,gDAYnCH,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAd7B,yDAAR,wDE1IhBc,EA1CG,SAAC,GAAoC,IAAlC2C,EAAiC,EAAjCA,UAAWF,EAAsB,EAAtBA,gBACxBG,EAAaD,EAAUvF,KAAI,SAACyF,GAAD,OAC/B,gCACE,8BAAKA,EAAIC,SACT,qBAAI1C,UAAU,UAAd,SAAyByC,EAAIE,SAC7B,gCACGZ,GAAWU,EAAIG,MADlB,MAC4BH,EAAI1C,GAAKgC,GAAWU,EAAI1C,IAAM,SAE1D,8BACE,yBACEE,QAAS,kBAAMoC,EAAgBI,EAAI1F,MACnCiD,UAAU,iBAFZ,wBAPKyC,EAAI1F,QAiBf,OACE,gBAAC,WAAD,WACE,qBAAIiD,UAAU,OAAd,mCACA,yBAAOA,UAAU,QAAjB,UACE,iCACE,gCACE,yCACA,qBAAIA,UAAU,UAAd,oBACA,qBAAIA,UAAU,UAAd,wBAIJ,iCAAQwC,aCWD5C,eAAQ,KAAM,CAAEiD,iBHyHC,SAAChH,GAAD,8CAAQ,WAAOkD,GAAP,eAAAU,EAAA,sDACtC,IACQb,EAAMrB,GAAI+E,OAAJ,8BAAkCzG,IAC9CkD,EAAS,CACPtD,KAAMhB,EACNiB,QAASkD,EAAIe,OAEfZ,EAASG,GAAS,qBAAsB,YACxC,MAAOL,GACPE,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAKN,EAAIH,SAASoD,WAAYhD,OAAQD,EAAIH,SAASI,UAX5B,2CAAR,wDGzHjBc,EA1CI,SAAC,GAAsC,IAApCkD,EAAmC,EAAnCA,WAAYD,EAAuB,EAAvBA,iBAC1BE,EAAcD,EAAW9F,KAAI,SAACgG,GAAD,OACjC,gCACE,8BAAKA,EAAIC,UACT,qBAAIjD,UAAU,UAAd,SAAyBgD,EAAIE,QAC7B,gCACGnB,GAAWiB,EAAIJ,MADlB,MAC4BI,EAAIjD,GAAKgC,GAAWiB,EAAIjD,IAAM,SAE1D,8BACE,yBACEE,QAAS,kBAAM4C,EAAiBG,EAAIjG,MACpCiD,UAAU,iBAFZ,wBAPKgD,EAAIjG,QAiBf,OACE,gBAAC,WAAD,WACE,qBAAIiD,UAAU,OAAd,qCACA,yBAAOA,UAAU,QAAjB,UACE,iCACE,gCACE,0CACA,qBAAIA,UAAU,UAAd,mBACA,qBAAIA,UAAU,UAAd,mBACA,6BAGJ,iCAAQ+C,aC0BDnD,gBALS,SAACrE,GAAD,MAAY,CAClC8B,KAAM9B,EAAM8B,KACZd,QAAShB,EAAMgB,WAGuB,CAAEsF,qBAAmBsB,cJ+IhC,yDAAM,WAAOpE,GAAP,SAAAU,EAAA,0DAE7B2D,OAAOC,QAAQ,yCAFc,0CAIvB9F,GAAI+E,OAAO,YAJY,OAM7BvD,EAAS,CAAEtD,KAAMjB,IACjBuE,EAAS,CAAEtD,KAAMb,IACjBmE,EAASG,GAAS,8CARW,gDAY7BH,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAdnC,yDAAN,wDI/Idc,EApDG,SAAC,GAKZ,IAJLiC,EAII,EAJJA,kBACAsB,EAGI,EAHJA,cACQhH,EAEJ,EAFJkB,KAAQlB,KACGI,EACP,EADJA,QAAWA,QAMX,OAJA+G,qBAAU,WACRzB,MACC,CAACA,IAGF,gBAAC,WAAD,WACE,qBAAI7B,UAAU,qBAAd,uBACA,qBAAGA,UAAU,OAAb,UACE,oBAAGA,UAAU,gBADf,WAC0C7D,GAAQA,EAAKuE,QAE1C,OAAZnE,EACC,gBAAC,WAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,CAAYuG,WAAYvG,EAAQuG,aAChC,eAAC,GAAD,CAAWP,UAAWhG,EAAQgG,YAE9B,sBAAKvC,UAAU,OAAf,SACE,0BAAQA,UAAU,iBAAiBC,QAAS,kBAAMkD,KAAlD,UACE,oBAAGnD,UAAU,sBADf,6BAMF,gBAAC,WAAD,WACE,oFACA,eAAC,IAAD,CAAMD,GAAG,kBAAkBC,UAAU,uBAArC,qCCpCN3E,GAAe,CACnB4H,QAAS,GACTM,QAAS,GACTC,SAAU,GACV1E,OAAQ,GACR2E,OAAQ,GACRC,eAAgB,GAChBC,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,UAAW,IAoPEpE,gBAJS,SAACrE,GAAD,MAAY,CAClCgB,QAAShB,EAAMgB,WAGuB,CAAE0H,cL9KxC,SAAC3D,EAAU4D,GAAX,IAAoBC,EAApB,sGACE,WAAOpF,GAAP,iBAAAU,EAAA,+EAIsBlC,GAAIV,KAAK,WAAYyD,GAJ3C,OAIU1B,EAJV,OAKIG,EAAS,CACPtD,KAAMpB,EACNqB,QAASkD,EAAIe,OAEfZ,EACEG,GAASiF,EAAO,kBAAoB,kBAAmB,YAEpDA,GACHD,EAAQE,KAAK,cAbnB,iDAgBU7D,EAAS,KAAI7B,SAASiB,KAAKY,SAE/BA,EAAOC,SAAQ,SAAC9D,GAAD,OAAWqC,EAASG,GAASxC,EAAMyC,IAAK,cAEzDJ,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAtBpE,yDADF,uDK8KuD+C,sBAA1CjC,EAjPK,SAAC,GAKd,IAAD,IAJJrD,QAAWA,EAIP,EAJOA,QAASL,EAIhB,EAJgBA,QACpB+H,EAGI,EAHJA,cACApC,EAEI,EAFJA,kBACAqC,EACI,EADJA,QAEA,EAAgCzD,mBAASpF,IAAzC,oBAAOiF,EAAP,KAAiBQ,EAAjB,KAEMuD,EAAkBC,YAAc,mBAEtC,EAAkD7D,oBAAS,GAA3D,oBAAO8D,EAAP,KAA4BC,EAA5B,KAEAlB,qBAAU,WAER,GADK/G,GAASsF,KACT3F,GAAWK,EAAS,CACvB,IAAMkI,EAAW,eAAQpJ,IACzB,IAAK,IAAMqJ,KAAOnI,EACZmI,KAAOD,IAAaA,EAAYC,GAAOnI,EAAQmI,IAErD,IAAK,IAAMA,KAAOnI,EAAQoI,OACpBD,KAAOD,IAAaA,EAAYC,GAAOnI,EAAQoI,OAAOD,IAExDE,MAAMC,QAAQJ,EAAYhB,UAC5BgB,EAAYhB,OAASgB,EAAYhB,OAAOqB,KAAK,MAC/ChE,EAAY2D,MAEb,CAACvI,EAAS2F,EAAmBtF,IAEhC,IACE0G,EAYE3C,EAZF2C,QACAM,EAWEjD,EAXFiD,QACAC,EAUElD,EAVFkD,SACA1E,EASEwB,EATFxB,OACA2E,EAQEnD,EARFmD,OACAC,EAOEpD,EAPFoD,eACAC,EAMErD,EANFqD,IACAC,EAKEtD,EALFsD,QACAC,EAIEvD,EAJFuD,SACAC,EAGExD,EAHFwD,SACAC,EAEEzD,EAFFyD,QACAC,EACE1D,EADF0D,UAGIjD,EAAW,SAACC,GAAD,OACfF,EAAY,2BAAKR,GAAN,mBAAiBU,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAOvD,OACE,gBAAC,WAAD,WACE,qBAAIlB,UAAU,qBAAd,SACGqE,EAAkB,sBAAwB,sBAE7C,qBAAGrE,UAAU,OAAb,UACE,oBAAGA,UAAU,gBAAmB,IAC/BqE,EAAe,qEAGZ,sCAEN,wDACA,wBAAMrE,UAAU,OAAOmB,SAlBV,SAACH,GAChBA,EAAEI,iBACF6C,EAAc3D,EAAU4D,IAAS3H,IAgB/B,UACE,uBAAKyD,UAAU,aAAf,UACE,0BAAQU,KAAK,SAASQ,MAAOpC,EAAQiC,SAAUA,EAA/C,UACE,yBAAQG,MAAM,IAAd,0CACA,yBAAQA,MAAM,YAAd,uBACA,yBAAQA,MAAM,mBAAd,8BACA,yBAAQA,MAAM,mBAAd,8BACA,yBAAQA,MAAM,UAAd,qBACA,yBAAQA,MAAM,sBAAd,iCACA,yBAAQA,MAAM,aAAd,mCACA,yBAAQA,MAAM,SAAd,oBACA,yBAAQA,MAAM,QAAd,sBAEF,wBAAOlB,UAAU,YAAjB,mEAIF,uBAAKA,UAAU,aAAf,UACE,wBACEvE,KAAK,OACL4F,YAAY,UACZX,KAAK,UACLQ,MAAO+B,EACPlC,SAAUA,IAEZ,wBAAOf,UAAU,YAAjB,8DAIF,uBAAKA,UAAU,aAAf,UACE,wBACEvE,KAAK,OACL4F,YAAY,UACZX,KAAK,UACLQ,MAAOqC,EACPxC,SAAUA,IAEZ,wBAAOf,UAAU,YAAjB,uDAIF,uBAAKA,UAAU,aAAf,UACE,wBACEvE,KAAK,OACL4F,YAAY,WACZX,KAAK,WACLQ,MAAOsC,EACPzC,SAAUA,IAEZ,wBAAOf,UAAU,YAAjB,2DAIF,uBAAKA,UAAU,aAAf,UACE,wBACEvE,KAAK,OACL4F,YAAY,WACZX,KAAK,SACLQ,MAAOuC,EACP1C,SAAUA,IAEZ,wBAAOf,UAAU,YAAjB,gFAIF,uBAAKA,UAAU,aAAf,UACE,wBACEvE,KAAK,OACL4F,YAAY,kBACZX,KAAK,iBACLQ,MAAOwC,EACP3C,SAAUA,IAEZ,wBAAOf,UAAU,YAAjB,uFAKF,uBAAKA,UAAU,aAAf,UACE,2BACEqB,YAAY,0BACZX,KAAK,MACLQ,MAAOyC,EACP5C,SAAUA,IAEZ,wBAAOf,UAAU,YAAjB,gDAGF,uBAAKA,UAAU,OAAf,UACE,yBACEC,QAAS,kBAAMuE,GAAoBD,IACnC9I,KAAK,SACLuE,UAAU,gBAHZ,sCAOA,gDAGDuE,GACC,gBAAC,WAAD,WACE,uBAAKvE,UAAU,0BAAf,UACE,oBAAGA,UAAU,yBACb,wBACEvE,KAAK,OACL4F,YAAY,cACZX,KAAK,UACLQ,MAAO0C,EACP7C,SAAUA,OAId,uBAAKf,UAAU,0BAAf,UACE,oBAAGA,UAAU,0BACb,wBACEvE,KAAK,OACL4F,YAAY,eACZX,KAAK,WACLQ,MAAO2C,EACP9C,SAAUA,OAId,uBAAKf,UAAU,0BAAf,UACE,oBAAGA,UAAU,yBACb,wBACEvE,KAAK,OACL4F,YAAY,cACZX,KAAK,UACLQ,MAAO6C,EACPhD,SAAUA,OAId,uBAAKf,UAAU,0BAAf,UACE,oBAAGA,UAAU,0BACb,wBACEvE,KAAK,OACL4F,YAAY,eACZX,KAAK,WACLQ,MAAO4C,EACP/C,SAAUA,OAId,uBAAKf,UAAU,0BAAf,UACE,oBAAGA,UAAU,2BACb,wBACEvE,KAAK,OACL4F,YAAY,gBACZX,KAAK,YACLQ,MAAO8C,EACPjD,SAAUA,UAMlB,wBAAOtF,KAAK,SAASuE,UAAU,yBAC/B,eAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,8BC/HOH,eAAQ,KAAM,CAAEmF,cNAF,SAACzE,EAAU4D,GAAX,8CAAuB,WAAOnF,GAAP,iBAAAU,EAAA,+EAE9BlC,GAAIyH,IAAI,sBAAuB1E,GAFD,OAE1C1B,EAF0C,OAIhDG,EAAS,CACPtD,KAAMhB,EACNiB,QAASkD,EAAIe,OAGfZ,EAASG,GAAS,mBAAoB,YAEtCgF,EAAQE,KAAK,cAXmC,iDAa1C7D,EAAS,KAAI7B,SAASiB,KAAKY,SAG/BA,EAAOC,SAAQ,SAAC9D,GAAD,OAAWqC,EAASG,GAASxC,EAAMyC,IAAK,cAEzDJ,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UApBhB,yDAAvB,wDMAdc,EA/GO,SAAC,GAAgC,IAA9BmF,EAA6B,EAA7BA,cAAeb,EAAc,EAAdA,QACtC,EAAgCzD,mBAAS,CACvCwC,QAAS,GACTC,MAAO,GACPM,SAAU,GACVZ,KAAM,GACN7C,GAAI,GACJkF,SAAS,EACTC,YAAa,KAPf,oBAAO5E,EAAP,KAAiBQ,EAAjB,KAUQmC,EAA6D3C,EAA7D2C,QAASC,EAAoD5C,EAApD4C,MAAOM,EAA6ClD,EAA7CkD,SAAUZ,EAAmCtC,EAAnCsC,KAAM7C,EAA6BO,EAA7BP,GAAIkF,EAAyB3E,EAAzB2E,QAASC,EAAgB5E,EAAhB4E,YAE/CnE,EAAW,SAAAC,GAAC,OAChBF,EAAY,2BAAKR,GAAN,mBAAiBU,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAEvD,OACE,gBAAC,WAAD,WACE,qBAAIlB,UAAU,qBAAd,+BACA,qBAAGA,UAAU,OAAb,UACE,oBAAGA,UAAU,uBADf,4EAIA,wDACA,wBACEA,UAAU,OACVmB,SAAU,SAAAH,GACRA,EAAEI,iBACF2D,EAAczE,EAAU4D,IAJ5B,UAOE,sBAAKlE,UAAU,aAAf,SACE,wBACEvE,KAAK,OACL4F,YAAY,cACZX,KAAK,QACLQ,MAAOgC,EACPnC,SAAUA,EACVQ,UAAQ,MAGZ,sBAAKvB,UAAU,aAAf,SACE,wBACEvE,KAAK,OACL4F,YAAY,YACZX,KAAK,UACLQ,MAAO+B,EACPlC,SAAUA,EACVQ,UAAQ,MAGZ,sBAAKvB,UAAU,aAAf,SACE,wBACEvE,KAAK,OACL4F,YAAY,WACZX,KAAK,WACLQ,MAAOsC,EACPzC,SAAUA,MAGd,uBAAKf,UAAU,aAAf,UACE,4CACA,wBAAOvE,KAAK,OAAOiF,KAAK,OAAOQ,MAAO0B,EAAM7B,SAAUA,OAExD,sBAAKf,UAAU,aAAf,SACE,+BACE,wBACEvE,KAAK,WACLiF,KAAK,UACLyE,QAASF,EACT/D,MAAO+D,EACPlE,SAAU,WACRD,EAAY,2BAAKR,GAAN,IAAgB2E,SAAUA,QAEtC,IATL,mBAaF,uBAAKjF,UAAU,aAAf,UACE,0CACA,wBACEvE,KAAK,OACLiF,KAAK,KACLQ,MAAOnB,EACPgB,SAAUA,EACVqE,SAAUH,OAGd,sBAAKjF,UAAU,aAAf,SACE,2BACEU,KAAK,cACL2E,KAAK,KACLC,KAAK,IACLjE,YAAY,kBACZH,MAAOgE,EACPnE,SAAUA,MAGd,wBAAOtF,KAAK,SAASuE,UAAU,yBAC/B,eAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,8BCaOH,eAAQ,KAAM,CAAE2F,aPyBH,SAACjF,EAAU4D,GAAX,8CAAuB,WAAOnF,GAAP,iBAAAU,EAAA,+EAE7BlC,GAAIyH,IAAI,qBAAsB1E,GAFD,OAEzC1B,EAFyC,OAG/CG,EAAS,CACPtD,KAAMhB,EACNiB,QAASkD,EAAIe,OAGfZ,EAASG,GAAS,kBAAmB,YAErCgF,EAAQE,KAAK,cAVkC,iDAYzC7D,EAAS,KAAI7B,SAASiB,KAAKY,SAG/BA,EAAOC,SAAQ,SAAC9D,GAAD,OAAWqC,EAASG,GAASxC,EAAMyC,IAAK,cAGzDJ,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UApBjB,yDAAvB,wDOzBbc,EAhHM,SAAC,GAA+B,IAA7B2F,EAA4B,EAA5BA,aAAcrB,EAAc,EAAdA,QACpC,EAAgCzD,mBAAS,CACvCiC,OAAQ,GACRC,OAAQ,GACR6C,aAAc,GACd5C,KAAM,GACN7C,GAAI,GACJkF,SAAS,EACTC,YAAa,KAPf,oBAAO5E,EAAP,KAAiBQ,EAAjB,KAUQ4B,EACNpC,EADMoC,OAAQC,EACdrC,EADcqC,OAAQ6C,EACtBlF,EADsBkF,aAAc5C,EACpCtC,EADoCsC,KAAM7C,EAC1CO,EAD0CP,GAAIkF,EAC9C3E,EAD8C2E,QAASC,EACvD5E,EADuD4E,YAGnDnE,EAAW,SAAAC,GAAC,OAChBF,EAAY,2BAAKR,GAAN,mBAAiBU,EAAEC,OAAOP,KAAOM,EAAEC,OAAOC,UAEvD,OACE,gBAAC,WAAD,WACE,qBAAIlB,UAAU,qBAAd,8BACA,qBAAGA,UAAU,OAAb,UACE,oBAAGA,UAAU,uBADf,mDAIA,wDACA,wBACEA,UAAU,OACVmB,SAAU,SAACH,GACTA,EAAEI,iBACFmE,EAAajF,EAAU4D,IAJ3B,UAOE,sBAAKlE,UAAU,aAAf,SACE,wBACEvE,KAAK,OACL4F,YAAY,uBACZX,KAAK,SACLQ,MAAOwB,EACP3B,SAAUA,EACVQ,UAAQ,MAGZ,sBAAKvB,UAAU,aAAf,SACE,wBACEvE,KAAK,OACL4F,YAAY,4BACZX,KAAK,SACLQ,MAAOyB,EACP5B,SAAUA,EACVQ,UAAQ,MAGZ,sBAAKvB,UAAU,aAAf,SACE,wBACEvE,KAAK,OACL4F,YAAY,iBACZX,KAAK,eACLQ,MAAOsE,EACPzE,SAAUA,MAGd,uBAAKf,UAAU,aAAf,UACE,4CACA,wBAAOvE,KAAK,OAAOiF,KAAK,OAAOQ,MAAO0B,EAAM7B,SAAUA,OAExD,sBAAKf,UAAU,aAAf,SACE,+BACE,wBACEvE,KAAK,WACLiF,KAAK,UACLyE,QAASF,EACT/D,MAAO+D,EACPlE,SAAU,WACRD,EAAY,2BAAKR,GAAN,IAAgB2E,SAAUA,QAEtC,IATL,sBAaF,uBAAKjF,UAAU,aAAf,UACE,0CACA,wBACEvE,KAAK,OACLiF,KAAK,KACLQ,MAAOnB,EACPgB,SAAUA,EACVqE,SAAUH,OAGd,sBAAKjF,UAAU,aAAf,SACE,2BACEU,KAAK,cACL2E,KAAK,KACLC,KAAK,IACLjE,YAAY,sBACZH,MAAOgE,EACPnE,SAAUA,MAGd,wBAAOtF,KAAK,SAASuE,UAAU,yBAC/B,eAAC,IAAD,CAAMA,UAAU,qBAAqBD,GAAG,aAAxC,8BC1GO,OAA0B,oCCa1B0F,GAVC,kBAEd,eAAC,WAAD,UACE,sBACEC,IAAKC,GACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,SAClDC,IAAI,oBCiCKC,GArCK,SAAC,GAQd,IAAD,IAPJ1J,QAOI,IANFJ,KAAQY,EAMN,EANMA,IAAK2D,EAMX,EANWA,KAAMwF,EAMjB,EANiBA,OACnBpH,EAKE,EALFA,OACAmE,EAIE,EAJFA,QACAO,EAGE,EAHFA,SACAC,EAEE,EAFFA,OAGF,OACE,uBAAKzD,UAAU,mBAAf,UACE,sBAAK0F,IAAKQ,EAAQF,IAAI,GAAGhG,UAAU,cACnC,iCACE,8BAAKU,IACL,+BACG5B,EADH,IACYmE,GAAW,yCAAWA,QAElC,oBAAGjD,UAAU,OAAb,SAAqBwD,GAAY,gCAAOA,MACxC,eAAC,IAAD,CAAMzD,GAAE,mBAAchD,GAAOiD,UAAU,kBAAvC,6BAIF,8BACGyD,EAAO0C,MAAM,EAAG,GAAGnJ,KAAI,SAACoJ,EAAOC,GAAR,OACtB,sBAAgBrG,UAAU,eAA1B,UACE,oBAAGA,UAAU,iBADf,IACkCoG,IADzBC,YCgBJzG,gBAHS,SAACrE,GAAD,MAAY,CAClCgB,QAAShB,EAAMgB,WAEuB,CAAE+J,YXbf,yDAAM,WAAOvH,GAAP,eAAAU,EAAA,6DAC/BV,EAAS,CACPtD,KAAMjB,IAFuB,kBAKX+C,GAAImC,IAAI,YALG,OAKvBd,EALuB,OAO7BG,EAAS,CACPtD,KAAMnB,EACNoB,QAASkD,EAAIe,OATc,gDAY7BZ,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAdnC,yDAAN,wDWaZc,EAtCE,SAAC,GACX,IADa0G,EACd,EADcA,YACd,IAD2B/J,QAAWC,EACtC,EADsCA,SAAUN,EAChD,EADgDA,QAKpD,OAHAoH,qBAAU,WACRgD,MACC,CAACA,IAEF,eAAC,WAAD,UACGpK,EACC,eAAC,GAAD,IAEE,gBAAC,WAAD,WACE,qBAAI8D,UAAU,qBAAd,wBACA,qBAAGA,UAAU,OAAb,UACE,oBAAGA,UAAU,0BADf,yCAIA,sBAAKA,UAAU,WAAf,SACGxD,EAAS+J,OAAS,EACjB/J,EAASQ,KAAI,SAAAT,GAAO,OAClB,eAAC,GAAD,CAA+BA,QAASA,GAAtBA,EAAQQ,QAG1B,iECsBHyJ,GAhDI,SAAC,GASb,IAAD,IARJjK,QACEuC,EAOE,EAPFA,OACAmE,EAME,EANFA,QACAO,EAKE,EALFA,SACAD,EAIE,EAJFA,QACAoB,EAGE,EAHFA,OAGE,IAFFxI,KAAQuE,EAEN,EAFMA,KAAMwF,EAEZ,EAFYA,OAGhB,OACE,uBAAKlG,UAAU,6BAAf,UACE,sBAAKA,UAAU,iBAAiB0F,IAAKQ,EAAQF,IAAI,KACjD,qBAAIhG,UAAU,QAAd,SAAuBU,IACvB,qBAAGV,UAAU,OAAb,UACGlB,EADH,IACYmE,EAAU,yCAAWA,KAAkB,QAEnD,6BAAIO,EAAW,gCAAOA,IAAmB,OACzC,uBAAKxD,UAAU,aAAf,UACGuD,EACC,oBAAGrD,KAAMqD,EAAStC,OAAO,SAASwF,IAAI,sBAAtC,SACE,oBAAGzG,UAAU,yBAEb,KACH2E,EACG+B,OAAOC,QAAQhC,GACdhJ,QAAO,wDACPqB,KAAI,oCAAE0H,EAAF,KAAOxD,EAAP,YACH,oBAEEhB,KAAMgB,EACND,OAAO,SACPwF,IAAI,sBAJN,SAME,oBAAGzG,UAAS,iBAAY0E,EAAZ,aALPA,MAQT,YCPGkC,GA9BM,SAAC,GAAD,QACnBrK,QACEoH,EAFiB,EAEjBA,IACAF,EAHiB,EAGjBA,OACQ/C,EAJS,EAIjBvE,KAAQuE,KAJS,OAOnB,uBAAKV,UAAU,6BAAf,UACG2D,GACC,gBAAC,WAAD,WACE,sBAAI3D,UAAU,eAAd,UAA8BU,EAAKmG,OAAOC,MAAM,KAAK,GAArD,WACA,6BAAInD,IACJ,sBAAK3D,UAAU,YAGnB,qBAAIA,UAAU,eAAd,uBACA,sBAAKA,UAAU,SAAf,SACGyD,EAAOzG,KAAI,SAACoJ,EAAOC,GAAR,OACV,uBAAiBrG,UAAU,MAA3B,UACE,oBAAGA,UAAU,iBADf,IACkCoG,IADxBC,YCOHU,GAxBU,SAAC,GAAD,QACvBxE,UAAaG,EADU,EACVA,OAAQC,EADE,EACFA,OAAQ6C,EADN,EACMA,aAAuBzF,GAD7B,EACoBkF,QADpB,EAC6BlF,IAAI6C,EADjC,EACiCA,KAAMsC,EADvC,EACuCA,YADvC,OAGvB,iCACE,qBAAIlF,UAAU,YAAd,SAA2B0C,IAC3B,+BACGX,GAAWa,GADd,MACwB7C,EAAKgC,GAAWhC,GAAM,SAE9C,+BACE,+CADF,IAC6B4C,KAE7B,+BACE,uDADF,IACqC6C,KAErC,+BACE,oDADF,IACkCN,SCSvB8B,GAxBW,SAAC,GAAD,QACxBlE,WAAcG,EADU,EACVA,QAASC,EADC,EACDA,MAAOM,EADN,EACMA,SAAmBzD,GADzB,EACgBkF,QADhB,EACyBlF,IAAI6C,EAD7B,EAC6BA,KAAMsC,EADnC,EACmCA,YADnC,OAGxB,iCACE,qBAAIlF,UAAU,YAAd,SAA2BiD,IAC3B,+BACGlB,GAAWa,GADd,MACwB7C,EAAKgC,GAAWhC,GAAM,SAE9C,+BACE,iDADF,IAC+BmD,KAE/B,+BACE,iDADF,IAC+BM,KAE/B,+BACE,oDADF,IACkC0B,SC+BvBtF,gBAHS,SAAArE,GAAK,MAAK,CAChCkB,MAAOlB,EAAMgB,QAAQE,SAEiB,CAAEwK,ehBkBZ,SAACC,GAAD,8CAAc,WAAOnI,GAAP,eAAAU,EAAA,+EAItBlC,GAAImC,IAAJ,0BAA2BwH,IAJL,OAIlCtI,EAJkC,OAKxCG,EAAS,CACPtD,KAAMf,EACNgB,QAASkD,EAAIe,OAPyB,gDAYxCZ,EAAS,CACPtD,KAAMd,IAbgC,yDAAd,wDgBlBfiF,EA7CO,SAAC,GAAyC,IAAvCsH,EAAsC,EAAtCA,SAAUD,EAA4B,EAA5BA,eAAgBxK,EAAY,EAAZA,MAKjD,OAHA6G,qBAAU,WACR2D,EAAeC,KACd,CAACD,EAAgBC,IAElB,uBAAKlH,UAAU,iBAAf,UACE,qBAAIA,UAAU,oBAAd,0BACCvD,EAAMO,KAAI,SAAAmK,GAAI,OACb,uBAAmBnH,UAAU,yBAA7B,UACE,iCACE,8BACE,oBAAGE,KAAMiH,EAAKC,SAAUnG,OAAO,SAASwF,IAAI,sBAA5C,SACGU,EAAKzG,SAGV,6BAAIyG,EAAKjC,iBAEX,+BACE,gCACE,sBAAIlF,UAAU,sBAAd,oBACUmH,EAAKE,oBAEf,sBAAIrH,UAAU,mBAAd,uBACamH,EAAKG,kBAElB,sBAAItH,UAAU,oBAAd,oBAA0CmH,EAAKI,sBAjB3CJ,EAAKtL,aCkFR+D,gBALS,SAACrE,GAAD,MAAY,CAClCgB,QAAShB,EAAMgB,QACfc,KAAM9B,EAAM8B,QAG0B,CAAEmK,ejB5CZ,SAACC,GAAD,8CAAY,WAAO1I,GAAP,eAAAU,EAAA,+EAEpBlC,GAAImC,IAAJ,wBAAyB+H,IAFL,OAEhC7I,EAFgC,OAGtCG,EAAS,CACPtD,KAAMpB,EACNqB,QAASkD,EAAIe,OALuB,gDAQtCZ,EAAS,CACPtD,KAAMlB,EACNmB,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAV1B,yDAAZ,wDiB4Cfc,EA/EC,SAAC,GAA2D,IAAzD4H,EAAwD,EAAxDA,eAA2BjL,EAA6B,EAAxCA,QAAWA,QAAWc,EAAkB,EAAlBA,KAAMqK,EAAY,EAAZA,MAO7D,OALApE,qBAAU,WACRkE,EAAeE,EAAMC,OAAO9L,MAC3B,CAAC2L,EAAgBE,EAAMC,OAAO9L,KAI/B,eAAC,WAAD,UACe,OAAZU,EACC,eAAC,GAAD,IAEE,gBAAC,WAAD,WACE,eAAC,IAAD,CAAMwD,GAAG,YAAYC,UAAU,gBAA/B,8BAGC3C,EAAKpB,kBACa,IAAjBoB,EAAKnB,SACLmB,EAAKlB,KAAKY,MAAQR,EAAQJ,KAAKY,KAC7B,eAAC,IAAD,CAAMgD,GAAG,gBAAgBC,UAAU,eAAnC,0BAIJ,uBAAKA,UAAU,oBAAf,UACE,eAAC,GAAD,CAAYzD,QAASA,IACrB,eAAC,GAAD,CAAcA,QAASA,IACvB,uBAAKyD,UAAU,2BAAf,UACE,qBAAIA,UAAU,eAAd,wBACCzD,EAAQuG,WAAWyD,OAAS,EAC3B,eAAC,WAAD,UACGhK,EAAQuG,WAAW9F,KAAI,SAAC8F,GAAD,OACtB,eAAC,GAAD,CAEEA,WAAYA,GADPA,EAAW/F,UAMpB,+DAIN,uBAAKiD,UAAU,2BAAf,UACE,qBAAIA,UAAU,eAAd,uBACCzD,EAAQgG,UAAUgE,OAAS,EAC1B,eAAC,WAAD,UACGhK,EAAQgG,UAAUvF,KAAI,SAACuF,GAAD,OACrB,eAAC,GAAD,CAEEA,UAAWA,GADNA,EAAUxF,UAMnB,8DAILR,EAAQmH,gBACP,eAAC,GAAD,CAAewD,SAAU3K,EAAQmH,4BCrE3CkE,GAAW,SAAC,GAAD,IACfC,EADe,EACfA,QACAC,EAFe,EAEfA,WACAC,EAHe,EAGfA,WACA1K,EAJe,EAIfA,KAJe,IAKfR,KAAQE,EALO,EAKPA,IAAKiL,EALE,EAKFA,KAAMtH,EALJ,EAKIA,KAAMwF,EALV,EAKUA,OAAQ/J,EALlB,EAKkBA,KAAMc,EALxB,EAKwBA,MAAOC,EAL/B,EAK+BA,SAAU8E,EALzC,EAKyCA,KACxDiG,EANe,EAMfA,YANe,OAQf,uBAAKjI,UAAU,yBAAf,UACE,+BACE,gBAAC,IAAD,CAAMD,GAAE,mBAAc5D,GAAtB,UACE,sBAAK6D,UAAU,YAAY0F,IAAKQ,EAAQF,IAAI,KAC5C,8BAAKtF,SAGT,iCACE,oBAAGV,UAAU,OAAb,SAAqBgI,IACrB,qBAAGhI,UAAU,YAAb,uBAAoC+B,GAAWC,MAE9CiG,GACC,gBAAC,WAAD,WACE,0BACEhI,QAAS,kBAAM4H,EAAQ9K,IACvBtB,KAAK,SACLuE,UAAU,gBAHZ,UAKE,oBAAGA,UAAU,qBAAsB,IACnC,gCAAO/C,EAAMsJ,OAAS,GAAK,gCAAOtJ,EAAMsJ,cAE1C,yBACEtG,QAAS,kBAAM6H,EAAW/K,IAC1BtB,KAAK,SACLuE,UAAU,gBAHZ,SAKE,oBAAGA,UAAU,yBAEf,gBAAC,IAAD,CAAMD,GAAE,iBAAYhD,GAAOiD,UAAU,kBAArC,uBACa,IACV9C,EAASqJ,OAAS,GACjB,uBAAMvG,UAAU,gBAAhB,SAAiC9C,EAASqJ,aAG5ClJ,EAAKnB,SAAWC,IAASkB,EAAKlB,KAAKY,KACnC,yBACEkD,QAAS,kBAAM8H,EAAWhL,IAC1BtB,KAAK,SACLuE,UAAU,iBAHZ,SAKE,oBAAGA,UAAU,6BAS3B4H,GAASM,aAAe,CACtBD,aAAa,GAYf,IAIerI,gBAJS,SAACrE,GAAD,MAAY,CAClC8B,KAAM9B,EAAM8B,QAG0B,CAAEwK,QClDnB,SAAAhM,GAAE,8CAAI,WAAMkD,GAAN,eAAAU,EAAA,+EAEPlC,GAAIyH,IAAJ,sBAAuBnJ,IAFhB,OAEnB+C,EAFmB,OAIzBG,EAAS,CACPtD,KAAMP,EACNQ,QAAS,CAAEG,KAAIoB,MAAO2B,EAAIe,QANH,gDASzBZ,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAXvC,yDAAJ,uDDkD0BgJ,WCjCzB,SAAAjM,GAAE,8CAAI,WAAMkD,GAAN,eAAAU,EAAA,+EAEVlC,GAAIyH,IAAJ,wBAAyBnJ,IAFf,OAEtB+C,EAFsB,OAI5BG,EAAS,CACPtD,KAAMP,EACNQ,QAAS,CAAEG,KAAIoB,MAAO2B,EAAIe,QANA,gDAS5BZ,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAXpC,yDAAJ,uDDiCmCiJ,WChBrC,SAAAlM,GAAE,8CAAI,WAAMkD,GAAN,SAAAU,EAAA,+EAEtBlC,GAAI+E,OAAJ,iBAAqBzG,IAFC,OAI5BkD,EAAS,CACPtD,KAAMT,EACNU,QAASG,IAGXkD,EAASG,GAAS,eAAgB,YATN,gDAW5BH,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAbpC,yDAAJ,wDDgBbc,CACbgI,IE1CahI,eACb,KACA,CAAEuI,QD0CmB,SAAA7H,GAAQ,8CAAI,WAAMvB,GAAN,eAAAU,EAAA,+EAEblC,GAAIV,KAAK,SAAUyD,GAFN,OAEzB1B,EAFyB,OAI/BG,EAAS,CACPtD,KAAMV,EACNW,QAASkD,EAAIe,OAGfZ,EAASG,GAAS,eAAgB,YATH,gDAW/BH,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAbjC,yDAAJ,wDC5ChBc,EAnCE,SAAC,GAAiB,IAAfuI,EAAc,EAAdA,QAClB,EAAwB1H,mBAAS,IAAjC,oBAAOuH,EAAP,KAAaI,EAAb,KAEA,OACE,uBAAKpI,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,SACE,qDAEF,wBACEA,UAAU,YACVmB,SAAU,SAAAH,GACRA,EAAEI,iBACF+G,EAAQ,CAAEH,SACVI,EAAQ,KALZ,UAQE,2BACE1H,KAAK,OACL2E,KAAK,KACLC,KAAK,IACLjE,YAAY,gBACZH,MAAO8G,EACPjH,SAAU,SAAAC,GAAC,OAAIoH,EAAQpH,EAAEC,OAAOC,QAChCK,UAAQ,IAEV,wBAAO9F,KAAK,SAASuE,UAAU,oBAAoBkB,MAAM,oBCOlDtB,gBAJS,SAACrE,GAAD,MAAY,CAClCsB,KAAMtB,EAAMsB,QAG0B,CAAEwL,SFvBlB,yDAAM,WAAMtJ,GAAN,eAAAU,EAAA,+EAERlC,GAAImC,IAAI,UAFA,OAEpBd,EAFoB,OAI1BG,EAAS,CACPtD,KAAMZ,EACNa,QAASkD,EAAIe,OANW,gDAS1BZ,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAXtC,yDAAN,wDEuBTc,EA9BD,SAAC,GAAmC,IAAjCyI,EAAgC,EAAhCA,SAAkBzL,EAAc,EAAtBC,KAAQD,MAKjC,OAJA0G,qBAAU,WACR+E,MACC,CAACA,IAGF,gBAAC,WAAD,WACE,qBAAIrI,UAAU,qBAAd,mBACA,qBAAGA,UAAU,OAAb,UACE,oBAAGA,UAAU,gBADf,+BAGA,eAAC,GAAD,IACA,sBAAKA,UAAU,QAAf,SACGpD,EAAMI,KAAI,SAACH,GAAD,OACT,eAAC,GAAD,CAAyBA,KAAMA,GAAhBA,EAAKE,gBCmBf6C,eACb,KACA,CAAE0I,WH8EsB,SAACC,EAAQjI,GAAT,8CAAsB,WAAMvB,GAAN,eAAAU,EAAA,+EAE1BlC,GAAIV,KAAJ,yBAA2B0L,GAAUjI,GAFX,OAEtC1B,EAFsC,OAI5CG,EAAS,CACPtD,KAAMN,EACNO,QAASkD,EAAIe,OAGfZ,EAASG,GAAS,gBAAiB,YATS,gDAW5CH,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAbpB,yDAAtB,wDGhFXc,EAnCK,SAAC,GAA4B,IAA1B2I,EAAyB,EAAzBA,OAAQD,EAAiB,EAAjBA,WAC7B,EAAwB7H,mBAAS,IAAjC,oBAAOuH,EAAP,KAAaI,EAAb,KAEA,OACE,uBAAKpI,UAAU,YAAf,UACE,sBAAKA,UAAU,eAAf,SACE,oDAEF,wBACEA,UAAU,YACVmB,SAAU,SAAAH,GACRA,EAAEI,iBACFkH,EAAWC,EAAQ,CAAEP,SACrBI,EAAQ,KALZ,UAQE,2BACE1H,KAAK,OACL2E,KAAK,KACLC,KAAK,IACLjE,YAAY,mBACZH,MAAO8G,EACPjH,SAAU,SAAAC,GAAC,OAAIoH,EAAQpH,EAAEC,OAAOC,QAChCK,UAAQ,IAEV,wBAAO9F,KAAK,SAASuE,UAAU,oBAAoBkB,MAAM,oBCiBlDtB,gBAJS,SAACrE,GAAD,MAAY,CAClC8B,KAAM9B,EAAM8B,QAG0B,CAAEmL,cJ4Fb,SAACD,EAAQE,GAAT,8CAAuB,WAAM1J,GAAN,SAAAU,EAAA,+EAE1ClC,GAAI+E,OAAJ,yBAA6BiG,EAA7B,YAAuCE,IAFG,OAIhD1J,EAAS,CACPtD,KAAML,EACNM,QAAS+M,IAGX1J,EAASG,GAAS,kBAAmB,YATW,gDAWhDH,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAbhB,yDAAvB,wDI5Fdc,EAxCK,SAAC,GAAD,IAClB2I,EADkB,EAClBA,OADkB,IAElBpL,QAAWJ,EAFO,EAEPA,IAAKiL,EAFE,EAEFA,KAAMtH,EAFJ,EAEIA,KAAMwF,EAFV,EAEUA,OAAQ/J,EAFlB,EAEkBA,KAAM6F,EAFxB,EAEwBA,KAC1C3E,EAHkB,EAGlBA,KACAmL,EAJkB,EAIlBA,cAJkB,OAMlB,uBAAKxI,UAAU,yBAAf,UACE,+BACE,gBAAC,IAAD,CAAMD,GAAE,mBAAc5D,GAAtB,UACE,sBAAK6D,UAAU,YAAY0F,IAAKQ,EAAQF,IAAI,KAC5C,8BAAKtF,SAGT,iCACE,oBAAGV,UAAU,OAAb,SAAqBgI,IACrB,qBAAGhI,UAAU,YAAb,uBAAoC+B,GAAWC,OAC7C3E,EAAKnB,SAAWC,IAASkB,EAAKlB,KAAKY,KACnC,yBACEkD,QAAS,kBAAMuI,EAAcD,EAAQxL,IACrCtB,KAAK,SACLuE,UAAU,iBAHZ,SAKE,oBAAGA,UAAU,4BCaRJ,gBAJS,SAACrE,GAAD,MAAY,CAClCsB,KAAMtB,EAAMsB,QAG0B,CAAE6L,QL6DnB,SAAA7M,GAAE,8CAAI,WAAMkD,GAAN,eAAAU,EAAA,+EAEPlC,GAAImC,IAAJ,iBAAkB7D,IAFX,OAEnB+C,EAFmB,OAIzBG,EAAS,CACPtD,KAAMX,EACNY,QAASkD,EAAIe,OANU,gDASzBZ,EAAS,CACPtD,KAAMR,EACNS,QAAS,CAAEyD,IAAK,KAAIT,SAASoD,WAAYhD,OAAQ,KAAIJ,SAASI,UAXvC,yDAAJ,wDK7DVc,EAhCF,SAAC,GAAiD,IAA/C8I,EAA8C,EAA9CA,QAA8C,IAArC7L,KAAQA,EAA6B,EAA7BA,KAAMX,EAAuB,EAAvBA,QAAWwL,EAAY,EAAZA,MAKhD,OAJApE,qBAAU,WACRoF,EAAQhB,EAAMC,OAAO9L,MACpB,CAAC6M,EAAShB,EAAMC,OAAO9L,KAEnBK,GAAoB,OAATW,EAChB,eAAC,GAAD,IAEE,gBAAC,WAAD,WACE,eAAC,IAAD,CAAMkD,GAAG,SAASC,UAAU,MAA5B,2BAGA,eAAC,GAAD,CAAUnD,KAAMA,EAAMoL,aAAa,IACnC,eAAC,GAAD,CAAaM,OAAQ1L,EAAKE,MAC1B,sBAAKiD,UAAU,WAAf,SACGnD,EAAKK,SAASF,KAAI,SAACG,GAAD,OACjB,eAAC,GAAD,CAA+BA,QAASA,EAASoL,OAAQ1L,EAAKE,KAA5CI,EAAQJ,gBCbvB4L,GAVE,WACf,OACE,gBAAC,WAAD,WACE,sBAAI3I,UAAU,uBAAd,UACE,oBAAGA,UAAU,gCADf,oBAGA,oBAAGA,UAAU,QAAb,gD,iCCyBSJ,gBAJS,SAAArE,GAAK,MAAK,CAChC8B,KAAM9B,EAAM8B,QAGCuC,EA5BM,SAAC,GAAD,IACRgJ,EADQ,EACnBC,UADmB,IAEnBxL,KAAQpB,EAFW,EAEXA,gBAAiBC,EAFN,EAEMA,QACtB4M,EAHgB,0BAKnB,eAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAAAC,GAAK,OACX9M,EACE,eAAC,GAAD,IACED,EACF,eAAC2M,EAAD,eAAeI,IAEX,eAAC,IAAD,CAAUjJ,GAAG,kBCmBVkJ,GAtBA,SAAAD,GACb,OACE,2BAAShJ,UAAU,YAAnB,UACE,eAAC,GAAD,IACA,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOkJ,OAAK,EAACC,KAAK,YAAYN,UAAWO,KACzC,eAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASN,UAAWQ,KACtC,eAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,YAAYN,UAAWS,KACzC,eAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,eAAeN,UAAWU,KAC5C,eAAC,GAAD,CAAcL,OAAK,EAACC,KAAK,aAAaN,UAAWW,KACjD,eAAC,GAAD,CAAcN,OAAK,EAACC,KAAK,kBAAkBN,UAAWY,KACtD,eAAC,GAAD,CAAcP,OAAK,EAACC,KAAK,gBAAgBN,UAAWY,KACpD,eAAC,GAAD,CAAcP,OAAK,EAACC,KAAK,kBAAkBN,UAAWa,KACtD,eAAC,GAAD,CAAcR,OAAK,EAACC,KAAK,iBAAiBN,UAAWc,KACrD,eAAC,GAAD,CAAcT,OAAK,EAACC,KAAK,SAASN,UAAWe,KAC7C,eAAC,GAAD,CAAcV,OAAK,EAACC,KAAK,aAAaN,UAAWgB,KACjD,eAAC,IAAD,CAAOhB,UAAWF,YCSXmB,I,MA3BH,WAYV,OAXAxG,qBAAU,WACJvH,aAAaD,OACfwB,EAAavB,aAAaD,OAE5B+B,GAAMkB,SAASS,MAEf4D,OAAO2G,iBAAiB,WAAW,WAC5BhO,aAAaD,OAAO+B,GAAMkB,SAAS,CAAEtD,KAAMrB,SAEjD,IAGD,eAAC,IAAD,CAAUyD,MAAOA,GAAjB,SACE,eAAC,IAAD,UACE,gBAAC,WAAD,WACE,eAAC,GAAD,IACA,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOqL,OAAK,EAACC,KAAK,IAAIN,UAAWzI,KACjC,eAAC,IAAD,CAAOyI,UAAWI,iBC5B9Be,IAASjB,OACP,eAAC,IAAMkB,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e95fc42f.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\n// login\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\n// profile\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\n\n// repos\nexport const GET_REPOS = 'GET_REPOS';\nexport const NO_REPOS = 'NO_REPOS';\n\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\n\n// posts\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const POST_ERROR = 'POST_ERROR';\n\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\n\n// comments\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nfunction alertReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n\nexport default alertReducer;","import {\n  REGISTER_SUCCESS,\n  // REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  // LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  ACCOUNT_DELETED\n\n} from '../actions/types';\n\n// STORING TOKIN\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null,\n};\n\nfunction authReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload,\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case ACCOUNT_DELETED:\n    case AUTH_ERROR:\n    case LOGOUT:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\nexport default authReducer;","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  NO_REPOS\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {},\n};\n\nfunction profileReducer(state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false,\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: [],\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false\n      }\n    case NO_REPOS:\n      return {\n        ...state,\n        repos: []\n      }\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer;","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nfunction postReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          )\n        },\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\n\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post\n\n})","\nimport api from './api';\n\nconst setAuthToken = token => {\n  if (token) {\n    api.defaults.headers.common['x-auth-token'] = token;\n    localStorage.setItem('token', token);\n  } else {\n    delete api.defaults.headers.common['x-auth-token'];\n    localStorage.removeItem('token');\n  }\n};\n\nexport default setAuthToken;","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n\nlet currentState = store.getState();\n\nstore.subscribe(() => {\n  let previousState = currentState;\n  currentState = store.getState();\n\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token\n    setAuthToken(token);\n  }\n\n});\nexport default store;","import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT } from '../actions/types';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\napi.interceptors.response.use(\n  res => res, err => {\n    if (err.response.status === 401) {\n      store.dispatch({ type: LOGOUT });\n    }\n    return Promise.reject(err)\n  }\n);\n\nexport default api","import { v4 as uuidv4 } from 'uuid';\n\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert =\n  (msg, alertType, timeout = 5000) =>\n    (dispatch) => {\n      const id = uuidv4();\n      dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id },\n      });\n\n      setTimeout(\n        () =>\n          dispatch({\n            type: REMOVE_ALERT,\n            payload: id,\n          }),\n        timeout\n      );\n    };","import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get('/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n//  Register User\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/users', formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const body = { email, password };\n\n  try {\n    const res = await api.post('/auth', body);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    })\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    })\n  }\n}\n\n// Logout\nexport const logout = () => ({ type: LOGOUT })","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/posts'>Posts</Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user' />{' '}\n          <span className='hide-sm'>Dashboard</span></Link>\n      </li>\n      <li>\n        <a onClick={logout} href='#!'>\n          <i className='fas fa-sign-out-alt' />{' '}\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fas fa-code'></i> Dev Squad\n        </Link>\n      </h1>\n      <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Developer Connector</h1>\n          <p className='lead'>\n            Create a developer profile/portfolio, share posts and get help from\n            other developers\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Landing;","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { register } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\n\nimport PropTypes from 'prop-types';\n\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger')\n    } else {\n      register({ name, email, password });\n\n    }\n  };\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={onChange}\n            require\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            minLength='6'\n            value={password2}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(mapStateToProps, { setAlert, register })(Register);","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { login } from '../../actions/auth';\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    login(email, password)\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign into Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n\n\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n  return (\n    <div className=\"dash-buttons\">\n      <Link to=\"/edit-profile\" className=\"btn btn-light\"\n      ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n\n      <Link to=\"/add-experience\" className=\"btn btn-light\"\n      ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n\n\n      <Link to=\"/add-education\" className=\"btn btn-light\"\n      ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\n    </div>\n  )\n}\nexport default DashboardActions;","import api from '../utils/api';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_REPOS,\n  NO_REPOS,\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await api.get('/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_PROFILE,\n  });\n  try {\n    const res = await api.get('/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Github \nexport const getGithubRepos = (username) => async (dispatch) => {\n\n\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n\n\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile =\n  (formData, history, edit = false) =>\n    async (dispatch\n    ) => {\n\n      try {\n        const res = await api.post('/profile', formData);\n        dispatch({\n          type: GET_PROFILE,\n          payload: res.data\n        });\n        dispatch(\n          setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n        );\n        if (!edit) {\n          history.push('/dashboard');\n        }\n      } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n          errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n          type: PROFILE_ERROR,\n          payload: { msg: err.response.statusText, status: err.response.status },\n        });\n      }\n    };\n\n// Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/experience', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = api.delete(`/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    })\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete \nexport const deleteAccount = () => async (dispatch) => {\n\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await api.delete('/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n      dispatch(setAlert('Your account has been permanently deleted'));\n\n    } catch (err) {\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};","function formatDate(date) {\n  return new Intl.DateTimeFormat().format(new Date(date));\n}\n\nexport default formatDate;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteEducation } from '../../actions/profile';\nimport formatDate from '../../utils/formatDate';\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        {formatDate(edu.from)} - {edu.to ? formatDate(edu.to) : 'Now'}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Degree</th>\n            <th className='hide-sm'>Years</th>\n            {/* <th/> */}\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteEducation })(Education);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\nimport formatDate from '../../utils/formatDate';\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        {formatDate(exp.from)} - {exp.to ? formatDate(exp.to) : 'Now'}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'> Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport Education from './Education';\nimport Experience from './Experience';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\n\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i>Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n          <Fragment>\n            <p>You have not setup a profile, please add some info</p>\n            <Link to='/create-profile' className='btn btn-primary my-1'>\n              Create Profile\n          </Link>\n          </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);","import React, { useState, Fragment, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: '',\n};\n\nconst ProfileForm = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const creatingProfile = useRouteMatch('/create-profile');\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n      if (Array.isArray(profileData.skills))\n        profileData.skills = profileData.skills.join(',');\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, profile ? true : false);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>\n        {creatingProfile ? 'Create Your Profile' : 'Edit Your Profile'}\n      </h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i>{' '}\n        {creatingProfile\n          ? `Let's get some information to make your\n        profile stand out`\n          : 'Add some changes to your profile'}\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={onChange}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Charlotte, NC)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={onChange}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  ProfileForm\n);","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          addExperience(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n              }}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={onChange}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(AddExperience);","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const { school, degree, fieldofstudy, from, to, current, description } =\n    formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any school or bootcamp you\n        have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certification'\n            name='degree'\n            value={degree}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n              }}\n            />{' '}\n            Current School\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={onChange}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(AddEducation);","export default __webpack_public_path__ + \"static/media/spinner.dbb22bcf.gif\";","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => (\n\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading.....'\n    />\n  </Fragment>\n);\nexport default Spinner;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills\n  }\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt='' className='round-img' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'>{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n                </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check' /> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n}\n\nexport default ProfileItem","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem'\nimport { getProfiles } from '../../actions/profile'\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n          <Fragment>\n            <h1 className='large text-primary'>Developers</h1>\n            <p className='lead'>\n              <i className='fab fa-connectdevelop' /> Browse and connect with\n              developers\n            </p>\n            <div className='profiles'>\n              {profiles.length > 0 ? (\n                profiles.map(profile => (\n                  <ProfileItem key={profile._id} profile={profile} />\n                ))\n              ) : (\n                  <h4>No profiles found...</h4>\n                )}\n            </div>\n          </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n}\nconst mapStateToProps = (state) => ({\n  profile: state.profile\n})\nexport default connect(mapStateToProps, { getProfiles })(Profiles);","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar }\n  }\n}) => {\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\n      <h1 className=\"large\">{name}</h1>\n      <p className=\"lead\">\n        {status} {company ? <span> at {company}</span> : null}\n      </p>\n      <p>{location ? <span>{location}</span> : null}</p>\n      <div className=\"icons my-1\">\n        {website ? (\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-globe fa-2x\" />\n          </a>\n        ) : null}\n        {social\n          ? Object.entries(social)\n            .filter(([_, value]) => value)\n            .map(([key, value]) => (\n              <a\n                key={key}\n                href={value}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className={`fab fa-${key} fa-2x`}></i>\n              </a>\n            ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n\n}\n\nexport default ProfileTop;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name }\n  }\n}) => (\n  <div className='profile-about bg-light p-2'>\n    {bio && (\n      <Fragment>\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\n        <p>{bio}</p>\n        <div className='line' />\n      </Fragment>\n    )}\n    <h2 className='text-primary'>Skill Set</h2>\n    <div className='skills'>\n      {skills.map((skill, index) => (\n        <div key={index} className='p-1'>\n          <i className='fas fa-check' /> {skill}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport formatDate from '../../utils/formatDate';\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description },\n}) => (\n  <div>\n    <h3 className=\"text-dark\">{school}</h3>\n    <p>\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\n    </p>\n    <p>\n      <strong>Degree: </strong> {degree}\n    </p>\n    <p>\n      <strong>Field Of Study: </strong> {fieldofstudy}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n)\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport formatDate from '../../utils/formatDate';\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => (\n  <div>\n    <h3 className='text-dark'>{company}</h3>\n    <p>\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\n    </p>\n    <p>\n      <strong>Position: </strong> {title}\n    </p>\n    <p>\n      <strong>Location: </strong> {location}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { getGithubRepos } from '../../actions/profile';\nimport { connect } from 'react-redux';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos.map(repo => (\n        <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n          <div>\n            <h4>\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {repo.name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div>\n            <ul>\n              <li className=\"badge badge-primary\">\n                Stars: {repo.stargazers_count}\n              </li>\n              <li className=\"badge badge-dark\">\n                Watchers: {repo.watchers_count}\n              </li>\n              <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n\n}\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileGithub from './ProfileGithub';\n\nimport { getProfileById } from '../../actions/profile';\n\n\n\n\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id])\n\n\n  return (\n    <Fragment>\n      {profile === null ? (\n        <Spinner />\n      ) : (\n          <Fragment>\n            <Link to=\"/profiles\" className=\"btn btn-light\">\n              Back To Profiles\n          </Link>\n            {auth.isAuthenticated &&\n              auth.loading === false &&\n              auth.user._id === profile.user._id && (\n                <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                  Edit Profile\n                </Link>\n              )}\n            <div className=\"profile-grid my-1\">\n              <ProfileTop profile={profile} />\n              <ProfileAbout profile={profile} />\n              <div className=\"profile-exp bg-white p-2\">\n                <h2 className=\"text-primary\">Experience</h2>\n                {profile.experience.length > 0 ? (\n                  <Fragment>\n                    {profile.experience.map((experience) => (\n                      <ProfileExperience\n                        key={experience._id}\n                        experience={experience}\n                      />\n                    ))}\n                  </Fragment>\n                ) : (\n                    <h4>No experience credentials</h4>\n                  )}\n              </div>\n\n              <div className=\"profile-edu bg-white p-2\">\n                <h2 className=\"text-primary\">Education</h2>\n                {profile.education.length > 0 ? (\n                  <Fragment>\n                    {profile.education.map((education) => (\n                      <ProfileEducation\n                        key={education._id}\n                        education={education}\n                      />\n                    ))}\n                  </Fragment>\n                ) : (\n                    <h4>No education credentials</h4>\n                  )}\n              </div>\n\n              {profile.githubusername && (\n                <ProfileGithub username={profile.githubusername} />\n              )}\n            </div>\n          </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport formatDate from '../../utils/formatDate';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div className=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className=\"my-1\">{text}</p>\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-up\" />{' '}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-down\" />\n          </button>\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n            Discussion{' '}\n            {comments.length > 0 && (\n              <span className=\"comment-count\">{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={() => deletePost(_id)}\n              type=\"button\"\n              className=\"btn btn-danger\"\n            >\n              <i className=\"fas fa-times\" />\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);","import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await api.get('/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await api.put(`/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await api.put(`/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.delete(`/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n  try {\n    const res = await api.post('/posts', formData);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await api.get(`/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  try {\n    const res = await api.post(`/posts/comment/${postId}`, formData);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Say Something...</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault();\n          addPost({ text });\n          setText('');\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addPost }\n)(PostForm);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Posts</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Welcome to the community\n      </p>\n      <PostForm />\n      <div className=\"posts\">\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Leave a Comment</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault();\n          addComment(postId, { text });\n          setText('');\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Comment the post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addComment }\n)(CommentForm);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport formatDate from '../../utils/formatDate';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className=\"my-1\">{text}</p>\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deleteComment(postId, _id)}\n          type=\"button\"\n          className=\"btn btn-danger\"\n        >\n          <i className=\"fas fa-times\" />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n      <Fragment>\n        <Link to=\"/posts\" className=\"btn\">\n          Back To Posts\n      </Link>\n        <PostItem post={post} showActions={false} />\n        <CommentForm postId={post._id} />\n        <div className=\"comments\">\n          {post.comments.map((comment) => (\n            <CommentItem key={comment._id} comment={comment} postId={post._id} />\n          ))}\n        </div>\n      </Fragment>\n    );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);","import React, { Fragment } from 'react';\n\n\nconst NotFound = () => {\n  return (\n    <Fragment>\n      <h1 className='x-large text primary'>\n        <i className='fas fa-exclamation-triangle' />Page Not Found\n            </h1>\n      <p className='large'>Sorry this page does not exist</p>\n    </Fragment>\n  )\n};\nexport default NotFound;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      loading ? (\n        <Spinner />\n      ) : isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n            <Redirect to='/login' />\n          )\n    }\n  />\n);\n\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Alert from '../layout/Alert';\nimport Dashboard from '../dashboard/Dashboard';\nimport ProfileForm from '../profile-forms/ProfileForm';\nimport AddExperience from '../profile-forms/AddExperience';\nimport AddEducation from '../profile-forms/AddEducation';\nimport Profiles from '../profiles/Profiles';\nimport Profile from '../profile/Profile';\nimport Posts from '../posts/Posts';\nimport Post from '../post/Post';\nimport NotFound from '../layout/NotFound';\nimport PrivateRoute from '../routing/PrivateRoute';\n\nconst Routes = props => {\n  return (\n    <section className='container'>\n      <Alert />\n      <Switch>\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/profiles' component={Profiles} />\n        <Route exact path='/profile/:id' component={Profile} />\n        <PrivateRoute exact path='/dashboard' component={Dashboard} />\n        <PrivateRoute exact path='/create-profile' component={ProfileForm} />\n        <PrivateRoute exact path='/edit-profile' component={ProfileForm} />\n        <PrivateRoute exact path='/add-experience' component={AddExperience} />\n        <PrivateRoute exact path='/add-education' component={AddEducation} />\n        <PrivateRoute exact path='/posts' component={Posts} />\n        <PrivateRoute exact path='/posts/:id' component={Post} />\n        <Route component={NotFound} />\n      </Switch>\n    </section>\n  );\n};\n\nexport default Routes;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\nimport { LOGOUT } from './actions/types';\nimport './App.css';\n\nimport { Provider } from 'react-redux';\n// Redux\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nconst App = () => {\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}