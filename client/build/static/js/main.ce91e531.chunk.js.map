{"version":3,"sources":["actions/types.js","reducers/alert.js","reducers/index.js","utils/setAuthToken.js","store.js","utils/api.js","actions/alert.js","actions/auth.js","components/layout/Navbar.js","components/layout/Landing.js","components/auth/Register.js","components/auth/Login.js","components/layout/Alert.js","components/dashboard/DashboardActions.js","actions/profile.js","utils/formatDate.js","components/dashboard/Education.js","components/dashboard/Experience.js","components/dashboard/Dashboard.js","components/profile-forms/ProfileForm.js","components/profile-forms/AddExperience.js","components/profile-forms/AddEducation.js","components/layout/spinner.gif","components/layout/Spinner.js","components/profiles/ProfileItem.js","components/profiles/Profiles.js","components/profile/ProfileTop.js","components/profile/ProfileAbout.js","components/profile/ProfileEducation.js","components/profile/ProfileExperience.js","components/profile/ProfileGithub.js","components/profile/Profile.js","components/posts/PostItem.js","actions/post.js","components/posts/PostForm.js","components/posts/Posts.js","components/post/CommentForm.js","components/post/CommentItem.js","components/post/Post.js","components/layout/NotFound.js","components/routing/PrivateRoute.js","components/routing/Routes.js","App.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","LOGOUT","GET_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","UPDATE_PROFILE","POST_ERROR","UPDATE_LIKES","initialState","combineReducers","alert","state","action","type","payload","filter","id","setAuthToken","token","api","defaults","headers","common","localStorage","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","auth","axios","create","baseURL","interceptors","response","use","res","err","status","dispatch","Promise","reject","setAlert","msg","alertType","timeout","uuidv4","setTimeout","loadUser","a","get","data","connect","logout","isAuthenticated","authLinks","to","className","onClick","href","guestLinks","Landing","register","formData","post","errors","forEach","error","useState","name","email","password","password2","setFormData","onChange","e","target","value","onSubmit","preventDefault","placeholder","require","required","minLength","login","body","alerts","map","DashboardActions","getCurrentProfile","statusText","formatDate","date","Intl","DateTimeFormat","format","Date","deleteEducation","delete","education","educations","edu","school","degree","from","_id","deleteExperience","experience","experiences","exp","company","title","profile","deleteAccount","window","confirm","user","useEffect","website","location","skills","githubusername","bio","twitter","facebook","linkedin","youtube","instagram","createProfile","history","edit","push","loading","creatingProfile","useRouteMatch","displaySocialInputs","toggleSocialInputs","profileData","key","social","Array","isArray","join","addExperience","put","current","description","checked","disabled","cols","rows","addEducation","fieldofstudy","Spinner","src","spinner","style","width","margin","display","alt","ProfileItem","avatar","slice","skill","index","getProfiles","profiles","length","ProfileTop","rel","Object","entries","ProfileAbout","trim","split","ProfileEducation","ProfileExperience","repos","getGithubRepos","username","repo","html_url","stargazers_count","watchers_count","forks_count","getProfileById","userId","match","params","PostItem","addLike","removeLike","deletePost","text","likes","comments","showActions","defaultProps","addPost","setText","getPosts","posts","addComment","postId","deleteComment","commentId","comment","getPost","NotFound","Component","component","rest","render","props","Routes","exact","path","Register","Login","Profiles","Profile","Dashboard","ProfileForm","AddExperience","AddEducation","Posts","Post","App","addEventListener","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce91e531.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\n\n\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\n\n// login\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\n\n// profile\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\n\n// repos\nexport const GET_REPOS = 'GET_REPOS';\nexport const NO_REPOS = 'NO_REPOS';\n\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\n\n// posts\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const DELETE_POST = 'DELETE_POST';\nexport const POST_ERROR = 'POST_ERROR';\n\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\n\n// comments\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nexport default function foo(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\n\nexport default combineReducers({\n  alert,\n});","import api from './api';\n\nconst setAuthToken = token => {\n  if (token) {\n    api.defaults.headers.common['x-auth-token'] = token;\n    localStorage.setItem('token', token);\n  } else {\n    delete api.defaults.headers.common['x-auth-token'];\n    localStorage.removeItem('token');\n  }\n};\n\nexport default setAuthToken;","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n\nlet currentState = store.getState();\n\nstore.subscribe(() => {\n  let previousState = currentState;\n  currentState = store.getState();\n\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token\n    setAuthToken(token);\n  }\n\n});\nexport default store;","import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT } from '../actions/types';\n\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\napi.interceptors.response.use(\n  res => res, err => {\n    if (err.response.status === 401) {\n      store.dispatch({ type: LOGOUT });\n    }\n    return Promise.reject(err)\n  }\n);\n\nexport default api","import { v4 as uuidv4 } from 'uuid';\n\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert =\n  (msg, alertType, timeout = 5000) =>\n    (dispatch) => {\n      const id = uuidv4();\n      dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id },\n      });\n\n      setTimeout(\n        () =>\n          dispatch({\n            type: REMOVE_ALERT,\n            payload: id,\n          }),\n        timeout\n      );\n    };","import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from './types';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  try {\n    const res = await api.get('/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR,\n    });\n  }\n};\n\n//  Register User\nexport const register = formData => async dispatch => {\n  try {\n    const res = await api.post('/users', formData);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL,\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  const body = { email, password };\n\n  try {\n    const res = await api.post('/auth', body);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    })\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: LOGIN_FAIL\n    })\n  }\n}\n\n// Logout\nexport const logout = () => ({ type: LOGOUT })","import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logout } from '../../actions/auth';\n\nconst Navbar = ({ auth: { isAuthenticated }, logout }) => {\n  const authLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/posts'>Posts</Link>\n      </li>\n      <li>\n        <Link to='/dashboard'>\n          <i className='fas fa-user' />{' '}\n          <span className='hide-sm'>Dashboard</span></Link>\n      </li>\n      <li>\n        <a onClick={logout} href='#!'>\n          <i className='fas fa-sign-out-alt' />{' '}\n          <span className='hide-sm'>Logout</span>\n        </a>\n      </li>\n    </ul>\n  );\n  const guestLinks = (\n    <ul>\n      <li>\n        <Link to='/profiles'>Developers</Link>\n      </li>\n      <li>\n        <Link to='/register'>Register</Link>\n      </li>\n      <li>\n        <Link to='/login'>Login</Link>\n      </li>\n    </ul>\n  );\n\n  return (\n    <nav className='navbar bg-dark'>\n      <h1>\n        <Link to='/'>\n          <i className='fas fa-code'></i> Dev Squad\n        </Link>\n      </h1>\n      <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  logout: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logout })(Navbar);","\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Landing = () => {\n  return (\n    <section className='landing'>\n      <div className='dark-overlay'>\n        <div className='landing-inner'>\n          <h1 className='x-large'>Developer Connector</h1>\n          <p className='lead'>\n            Create a developer profile/portfolio, share posts and get help from\n            other developers\n          </p>\n          <div className='buttons'>\n            <Link to='/register' className='btn btn-primary'>\n              Sign Up\n            </Link>\n            <Link to='/login' className='btn btn-light'>\n              Login\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Landing;","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { register } from '../../actions/auth';\nimport { setAlert } from '../../actions/alert';\n\nimport PropTypes from 'prop-types';\n\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    password2: '',\n  });\n\n  const { name, email, password, password2 } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (password !== password2) {\n      setAlert('Passwords do not match', 'danger')\n\n    } else {\n      register({ name, email, password });\n\n    }\n  };\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign Up</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Create Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Name'\n            name='name'\n            value={name}\n            onChange={onChange}\n            require\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n          <small className='form-text'>\n            This site uses Gravatar so if you want a profile image, use a\n            Gravatar email\n          </small>\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Confirm Password'\n            name='password2'\n            minLength='6'\n            value={password2}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <input type='submit' className='btn btn-primary' value='Register' />\n      </form>\n      <p className='my-1'>\n        Already have an account? <Link to='/login'>Sign In</Link>\n      </p>\n    </Fragment>\n  );\n};\nRegister.propTypes = {\n  setAlert: PropTypes.func.isRequired,\n  register: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n};\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\nexport default connect(mapStateToProps, { setAlert, register })(Register);","import React, { Fragment, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types'\nimport { login } from '../../actions/auth';\n\n\n\nconst Login = ({ login, isAuthenticated }) => {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    login(email, password)\n  };\n\n  if (isAuthenticated) {\n    return <Redirect to='/dashboard' />;\n  }\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Sign In</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i> Sign into Your Account\n      </p>\n      <form className='form' onSubmit={onSubmit}>\n\n\n        <div className='form-group'>\n          <input\n            type='email'\n            placeholder='Email Address'\n            name='email'\n            value={email}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <div className='form-group'>\n          <input\n            type='password'\n            placeholder='Password'\n            name='password'\n            minLength='6'\n            value={password}\n            onChange={onChange}\n            required\n          />\n        </div>\n\n        <input type='submit' className='btn btn-primary' value='Login' />\n      </form>\n      <p className='my-1'>\n        Don't have an account? <Link to='/register'>Sign Up</Link>\n      </p>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alerts }) =>\n  alerts.map((alert) => (\n    <div key={alert.id} className={`alert alert-${alert.alertType}`}>\n      {alert.msg}\n    </div>\n  ));\n\nAlert.propTypes = {\n  alerts: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  alerts: state.alert\n});\n\nexport default connect(mapStateToProps)(Alert);","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst DashboardActions = () => {\n  return (\n    <div className=\"dash-buttons\">\n      <Link to=\"/edit-profile\" className=\"btn btn-light\"\n      ><i className=\"fas fa-user-circle text-primary\"></i> Edit Profile</Link>\n\n      <Link to=\"/add-experience\" className=\"btn btn-light\"\n      ><i className=\"fab fa-black-tie text-primary\"></i> Add Experience</Link>\n\n\n      <Link to=\"/add-education\" className=\"btn btn-light\"\n      ><i className=\"fas fa-graduation-cap text-primary\"></i> Add Education</Link>\n    </div>\n  )\n}\nexport default DashboardActions;","import api from '../utils/api';\nimport { setAlert } from './alert';\n\nimport {\n  GET_PROFILE,\n  GET_PROFILES,\n  PROFILE_ERROR,\n  UPDATE_PROFILE,\n  CLEAR_PROFILE,\n  ACCOUNT_DELETED,\n  GET_REPOS,\n  NO_REPOS,\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async (dispatch) => {\n  try {\n    const res = await api.get('/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get all profiles\nexport const getProfiles = () => async (dispatch) => {\n  dispatch({\n    type: CLEAR_PROFILE,\n  });\n  try {\n    const res = await api.get('/profile');\n\n    dispatch({\n      type: GET_PROFILES,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Profile by ID\nexport const getProfileById = (userId) => async (dispatch) => {\n  try {\n    const res = await api.get(`/profile/user/${userId}`);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Get Github \nexport const getGithubRepos = (username) => async (dispatch) => {\n\n\n  try {\n    const res = await api.get(`/profile/github/${username}`);\n    dispatch({\n      type: GET_REPOS,\n      payload: res.data\n    });\n\n\n  } catch (err) {\n    dispatch({\n      type: NO_REPOS\n    });\n  }\n};\n\n// Create or update profile\nexport const createProfile =\n  (formData, history, edit = false) =>\n    async (dispatch\n    ) => {\n\n      try {\n        const res = await api.post('/profile', formData);\n        dispatch({\n          type: GET_PROFILE,\n          payload: res.data\n        });\n        dispatch(\n          setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success')\n        );\n        if (!edit) {\n          history.push('/dashboard');\n        }\n      } catch (err) {\n        const errors = err.response.data.errors;\n        if (errors) {\n          errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n          type: PROFILE_ERROR,\n          payload: { msg: err.response.statusText, status: err.response.status },\n        });\n      }\n    };\n\n// Add Experience\nexport const addExperience = (formData, history) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/experience', formData);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Education\nexport const addEducation = (formData, history) => async (dispatch) => {\n  try {\n    const res = await api.put('/profile/education', formData);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Delete experience\nexport const deleteExperience = (id) => async (dispatch) => {\n  try {\n    const res = api.delete(`/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    })\n    dispatch(setAlert('Experience Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete education\nexport const deleteEducation = (id) => async (dispatch) => {\n  try {\n    const res = await api.delete(`/profile/education/${id}`);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Education Removed', 'success'));\n\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete \nexport const deleteAccount = () => async (dispatch) => {\n\n  if (window.confirm('Are you sure? This can NOT be undone!')) {\n    try {\n      await api.delete('/profile');\n\n      dispatch({ type: CLEAR_PROFILE });\n      dispatch({ type: ACCOUNT_DELETED });\n      dispatch(setAlert('Your account has been permanently deleted'));\n\n    } catch (err) {\n\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: { msg: err.response.statusText, status: err.response.status }\n      });\n    }\n  }\n};","function formatDate(date) {\n  return new Intl.DateTimeFormat().format(new Date(date));\n}\n\nexport default formatDate;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteEducation } from '../../actions/profile';\nimport formatDate from '../../utils/formatDate';\n\nconst Education = ({ education, deleteEducation }) => {\n  const educations = education.map((edu) => (\n    <tr key={edu._id}>\n      <td>{edu.school}</td>\n      <td className='hide-sm'>{edu.degree}</td>\n      <td>\n        {formatDate(edu.from)} - {edu.to ? formatDate(edu.to) : 'Now'}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteEducation(edu._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'>Education Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>School</th>\n            <th className='hide-sm'>Degree</th>\n            <th className='hide-sm'>Years</th>\n            {/* <th/> */}\n          </tr>\n        </thead>\n        <tbody>{educations}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nEducation.propTypes = {\n  education: PropTypes.array.isRequired,\n  deleteEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteEducation })(Education);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteExperience } from '../../actions/profile';\nimport formatDate from '../../utils/formatDate';\n\nconst Experience = ({ experience, deleteExperience }) => {\n  const experiences = experience.map((exp) => (\n    <tr key={exp._id}>\n      <td>{exp.company}</td>\n      <td className='hide-sm'>{exp.title}</td>\n      <td>\n        {formatDate(exp.from)} - {exp.to ? formatDate(exp.to) : 'Now'}\n      </td>\n      <td>\n        <button\n          onClick={() => deleteExperience(exp._id)}\n          className='btn btn-danger'\n        >\n          Delete\n        </button>\n      </td>\n    </tr>\n  ));\n\n  return (\n    <Fragment>\n      <h2 className='my-2'> Experience Credentials</h2>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Company</th>\n            <th className='hide-sm'>Title</th>\n            <th className='hide-sm'>Years</th>\n            <th />\n          </tr>\n        </thead>\n        <tbody>{experiences}</tbody>\n      </table>\n    </Fragment>\n  );\n};\n\nExperience.propTypes = {\n  experience: PropTypes.array.isRequired,\n  deleteExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteExperience })(Experience);","import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport DashboardActions from './DashboardActions';\nimport Education from './Education';\nimport Experience from './Experience';\nimport { getCurrentProfile, deleteAccount } from '../../actions/profile';\n\n\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAccount,\n  auth: { user },\n  profile: { profile }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Dashboard</h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i>Welcome {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.experience} />\n          <Education education={profile.education} />\n\n          <div className='my-2'>\n            <button className='btn btn-danger' onClick={() => deleteAccount()}>\n              <i className='fas fa-user-minus' /> Delete My Account\n            </button>\n          </div>\n        </Fragment>\n      ) : (\n          <Fragment>\n            <p>You have not setup a profile, please add some info</p>\n            <Link to='/create-profile' className='btn btn-primary my-1'>\n              Create Profile\n          </Link>\n          </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAccount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAccount })(Dashboard);","import React, { useState, Fragment, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\n\nconst initialState = {\n  company: '',\n  website: '',\n  location: '',\n  status: '',\n  skills: '',\n  githubusername: '',\n  bio: '',\n  twitter: '',\n  facebook: '',\n  linkedin: '',\n  youtube: '',\n  instagram: '',\n};\n\nconst ProfileForm = ({\n  profile: { profile, loading },\n  createProfile,\n  getCurrentProfile,\n  history,\n}) => {\n  const [formData, setFormData] = useState(initialState);\n\n  const creatingProfile = useRouteMatch('/create-profile');\n\n  const [displaySocialInputs, toggleSocialInputs] = useState(false);\n\n  useEffect(() => {\n    if (!profile) getCurrentProfile();\n    if (!loading && profile) {\n      const profileData = { ...initialState };\n      for (const key in profile) {\n        if (key in profileData) profileData[key] = profile[key];\n      }\n      for (const key in profile.social) {\n        if (key in profileData) profileData[key] = profile.social[key];\n      }\n      if (Array.isArray(profileData.skills))\n        profileData.skills = profileData.skills.join(',');\n      setFormData(profileData);\n    }\n  }, [loading, getCurrentProfile, profile]);\n\n  const {\n    company,\n    website,\n    location,\n    status,\n    skills,\n    githubusername,\n    bio,\n    twitter,\n    facebook,\n    linkedin,\n    youtube,\n    instagram,\n  } = formData;\n\n  const onChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    createProfile(formData, history, profile ? true : false);\n  };\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>\n        {creatingProfile ? 'Create Your Profile' : 'Edit Your Profile'}\n      </h1>\n      <p className='lead'>\n        <i className='fas fa-user'></i>{' '}\n        {creatingProfile\n          ? `Let's get some information to make your\n        profile stand out`\n          : 'Add some changes to your profile'}\n      </p>\n      <small>* = required field</small>\n      <form className='form' onSubmit={onSubmit}>\n        <div className='form-group'>\n          <select name='status' value={status} onChange={onChange}>\n            <option value='0'>* Select Professional Status</option>\n            <option value='Developer'>Developer</option>\n            <option value='Junior Developer'>Junior Developer</option>\n            <option value='Senior Developer'>Senior Developer</option>\n            <option value='Manager'>Manager</option>\n            <option value='Student or Learning'>Student or Learning</option>\n            <option value='Instructor'>Instructor or Teacher</option>\n            <option value='Intern'>Intern</option>\n            <option value='Other'>Other</option>\n          </select>\n          <small className='form-text'>\n            Give us an idea of where you are at in your career\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own company or one you work for\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Website'\n            name='website'\n            value={website}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Could be your own or a company website\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            City & state suggested (eg. Charlotte, NC)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Skills'\n            name='skills'\n            value={skills}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            Please use comma separated values (eg. HTML,CSS,JavaScript,PHP)\n          </small>\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Github Username'\n            name='githubusername'\n            value={githubusername}\n            onChange={onChange}\n          />\n          <small className='form-text'>\n            If you want your latest repos and a Github link, include your\n            username\n          </small>\n        </div>\n        <div className='form-group'>\n          <textarea\n            placeholder='A short bio of yourself'\n            name='bio'\n            value={bio}\n            onChange={onChange}\n          ></textarea>\n          <small className='form-text'>Tell us a little about yourself</small>\n        </div>\n\n        <div className='my-2'>\n          <button\n            onClick={() => toggleSocialInputs(!displaySocialInputs)}\n            type='button'\n            className='btn btn-light'\n          >\n            Add Social Network Links\n          </button>\n          <span>Optional</span>\n        </div>\n\n        {displaySocialInputs && (\n          <Fragment>\n            <div className='form-group social-input'>\n              <i className='fab fa-twitter fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Twitter URL'\n                name='twitter'\n                value={twitter}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-facebook fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Facebook URL'\n                name='facebook'\n                value={facebook}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-youtube fa-2x'></i>\n              <input\n                type='text'\n                placeholder='YouTube URL'\n                name='youtube'\n                value={youtube}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-linkedin fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Linkedin URL'\n                name='linkedin'\n                value={linkedin}\n                onChange={onChange}\n              />\n            </div>\n\n            <div className='form-group social-input'>\n              <i className='fab fa-instagram fa-2x'></i>\n              <input\n                type='text'\n                placeholder='Instagram URL'\n                name='instagram'\n                value={instagram}\n                onChange={onChange}\n              />\n            </div>\n          </Fragment>\n        )}\n\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nProfileForm.propTypes = {\n  createProfile: PropTypes.func.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\n  ProfileForm\n);","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addExperience } from '../../actions/profile';\n\nconst AddExperience = ({ addExperience, history }) => {\n  const [formData, setFormData] = useState({\n    company: '',\n    title: '',\n    location: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const { company, title, location, from, to, current, description } = formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Experience</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any developer/programming\n        positions that you have had in the past\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={e => {\n          e.preventDefault();\n          addExperience(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Job Title'\n            name='title'\n            value={title}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Company'\n            name='company'\n            value={company}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Location'\n            name='location'\n            value={location}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n              }}\n            />{' '}\n            Current Job\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Job Description'\n            value={description}\n            onChange={onChange}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddExperience.propTypes = {\n  addExperience: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addExperience })(AddExperience);","import React, { Fragment, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addEducation } from '../../actions/profile';\n\nconst AddEducation = ({ addEducation, history }) => {\n  const [formData, setFormData] = useState({\n    school: '',\n    degree: '',\n    fieldofstudy: '',\n    from: '',\n    to: '',\n    current: false,\n    description: '',\n  });\n\n  const { school, degree, fieldofstudy, from, to, current, description } =\n    formData;\n\n  const onChange = e =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  return (\n    <Fragment>\n      <h1 className='large text-primary'>Add An Education</h1>\n      <p className='lead'>\n        <i className='fas fa-code-branch'></i> Add any school or bootcamp you\n        have attended\n      </p>\n      <small>* = required field</small>\n      <form\n        className='form'\n        onSubmit={(e) => {\n          e.preventDefault();\n          addEducation(formData, history);\n        }}\n      >\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* School or Bootcamp'\n            name='school'\n            value={school}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='* Degree or Certification'\n            name='degree'\n            value={degree}\n            onChange={onChange}\n            required\n          />\n        </div>\n        <div className='form-group'>\n          <input\n            type='text'\n            placeholder='Field of Study'\n            name='fieldofstudy'\n            value={fieldofstudy}\n            onChange={onChange}\n          />\n        </div>\n        <div className='form-group'>\n          <h4>From Date</h4>\n          <input type='date' name='from' value={from} onChange={onChange} />\n        </div>\n        <div className='form-group'>\n          <p>\n            <input\n              type='checkbox'\n              name='current'\n              checked={current}\n              value={current}\n              onChange={() => {\n                setFormData({ ...formData, current: !current });\n              }}\n            />{' '}\n            Current School\n          </p>\n        </div>\n        <div className='form-group'>\n          <h4>To Date</h4>\n          <input\n            type='date'\n            name='to'\n            value={to}\n            onChange={onChange}\n            disabled={current}\n          />\n        </div>\n        <div className='form-group'>\n          <textarea\n            name='description'\n            cols='30'\n            rows='5'\n            placeholder='Program Description'\n            value={description}\n            onChange={onChange}\n          />\n        </div>\n        <input type='submit' className='btn btn-primary my-1' />\n        <Link className='btn btn-light my-1' to='/dashboard'>\n          Go Back\n        </Link>\n      </form>\n    </Fragment>\n  );\n};\n\nAddEducation.propTypes = {\n  addEducation: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addEducation })(AddEducation);","export default __webpack_public_path__ + \"static/media/spinner.dbb22bcf.gif\";","import React, { Fragment } from 'react';\nimport spinner from './spinner.gif';\n\nconst Spinner = () => (\n\n  <Fragment>\n    <img\n      src={spinner}\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\n      alt='Loading.....'\n    />\n  </Fragment>\n);\nexport default Spinner;","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst ProfileItem = ({\n  profile: {\n    user: { _id, name, avatar },\n    status,\n    company,\n    location,\n    skills\n  }\n}) => {\n  return (\n    <div className='profile bg-light'>\n      <img src={avatar} alt='' className='round-img' />\n      <div>\n        <h2>{name}</h2>\n        <p>\n          {status} {company && <span> at {company}</span>}\n        </p>\n        <p className='my-1'>{location && <span>{location}</span>}</p>\n        <Link to={`/profile/${_id}`} className='btn btn-primary'>\n          View Profile\n                </Link>\n      </div>\n      <ul>\n        {skills.slice(0, 4).map((skill, index) => (\n          <li key={index} className='text-primary'>\n            <i className='fas fa-check' /> {skill}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nProfileItem.propTypes = {\n  profile: PropTypes.object.isRequired,\n}\n\nexport default ProfileItem","import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport ProfileItem from './ProfileItem'\nimport { getProfiles } from '../../actions/profile'\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading }\n}) => {\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return (\n    <Fragment>\n      {loading ? (\n        <Spinner />\n      ) : (\n          <Fragment>\n            <h1 className='large text-primary'>Developers</h1>\n            <p className='lead'>\n              <i className='fab fa-connectdevelop' /> Browse and connect with\n              developers\n            </p>\n            <div className='profiles'>\n              {profiles.length > 0 ? (\n                profiles.map(profile => (\n                  <ProfileItem key={profile._id} profile={profile} />\n                ))\n              ) : (\n                  <h4>No profiles found...</h4>\n                )}\n            </div>\n          </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n}\nconst mapStateToProps = (state) => ({\n  profile: state.profile\n})\nexport default connect(mapStateToProps, { getProfiles })(Profiles);","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst ProfileTop = ({\n  profile: {\n    status,\n    company,\n    location,\n    website,\n    social,\n    user: { name, avatar }\n  }\n}) => {\n  return (\n    <div className=\"profile-top bg-primary p-2\">\n      <img className=\"round-img my-1\" src={avatar} alt=\"\" />\n      <h1 className=\"large\">{name}</h1>\n      <p className=\"lead\">\n        {status} {company ? <span> at {company}</span> : null}\n      </p>\n      <p>{location ? <span>{location}</span> : null}</p>\n      <div className=\"icons my-1\">\n        {website ? (\n          <a href={website} target=\"_blank\" rel=\"noopener noreferrer\">\n            <i className=\"fas fa-globe fa-2x\" />\n          </a>\n        ) : null}\n        {social\n          ? Object.entries(social)\n            .filter(([_, value]) => value)\n            .map(([key, value]) => (\n              <a\n                key={key}\n                href={value}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <i className={`fab fa-${key} fa-2x`}></i>\n              </a>\n            ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nProfileTop.propTypes = {\n  profile: PropTypes.object.isRequired,\n\n}\n\nexport default ProfileTop;","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ProfileAbout = ({\n  profile: {\n    bio,\n    skills,\n    user: { name }\n  }\n}) => (\n  <div className='profile-about bg-light p-2'>\n    {bio && (\n      <Fragment>\n        <h2 className='text-primary'>{name.trim().split(' ')[0]}s Bio</h2>\n        <p>{bio}</p>\n        <div className='line' />\n      </Fragment>\n    )}\n    <h2 className='text-primary'>Skill Set</h2>\n    <div className='skills'>\n      {skills.map((skill, index) => (\n        <div key={index} className='p-1'>\n          <i className='fas fa-check' /> {skill}\n        </div>\n      ))}\n    </div>\n  </div>\n);\n\nProfileAbout.propTypes = {\n  profile: PropTypes.object.isRequired\n};\n\nexport default ProfileAbout;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport formatDate from '../../utils/formatDate';\n\nconst ProfileEducation = ({\n  education: { school, degree, fieldofstudy, current, to, from, description },\n}) => (\n  <div>\n    <h3 className=\"text-dark\">{school}</h3>\n    <p>\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\n    </p>\n    <p>\n      <strong>Degree: </strong> {degree}\n    </p>\n    <p>\n      <strong>Field Of Study: </strong> {fieldofstudy}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n)\n\nProfileEducation.propTypes = {\n  education: PropTypes.object.isRequired,\n};\n\nexport default ProfileEducation;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport formatDate from '../../utils/formatDate';\n\nconst ProfileExperience = ({\n  experience: { company, title, location, current, to, from, description },\n}) => (\n  <div>\n    <h3 className='text-dark'>{company}</h3>\n    <p>\n      {formatDate(from)} - {to ? formatDate(to) : 'Now'}\n    </p>\n    <p>\n      <strong>Position: </strong> {title}\n    </p>\n    <p>\n      <strong>Location: </strong> {location}\n    </p>\n    <p>\n      <strong>Description: </strong> {description}\n    </p>\n  </div>\n);\n\nProfileExperience.propTypes = {\n  experience: PropTypes.object.isRequired,\n};\n\nexport default ProfileExperience;","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { getGithubRepos } from '../../actions/profile';\nimport { connect } from 'react-redux';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos.map(repo => (\n        <div key={repo.id} className=\"repo bg-white p-1 my-1\">\n          <div>\n            <h4>\n              <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\n                {repo.name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div>\n            <ul>\n              <li className=\"badge badge-primary\">\n                Stars: {repo.stargazers_count}\n              </li>\n              <li className=\"badge badge-dark\">\n                Watchers: {repo.watchers_count}\n              </li>\n              <li className=\"badge badge-light\">Forks: {repo.forks_count}</li>\n            </ul>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n\n}\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileGithub from './ProfileGithub';\n\nimport { getProfileById } from '../../actions/profile';\n\n\n\n\nconst Profile = ({ getProfileById, profile: { profile }, auth, match }) => {\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id])\n\n\n  return (\n    <Fragment>\n      {profile === null ? (\n        <Spinner />\n      ) : (\n          <Fragment>\n            <Link to=\"/profiles\" className=\"btn btn-light\">\n              Back To Profiles\n          </Link>\n            {auth.isAuthenticated &&\n              auth.loading === false &&\n              auth.user._id === profile.user._id && (\n                <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                  Edit Profile\n                </Link>\n              )}\n            <div className=\"profile-grid my-1\">\n              <ProfileTop profile={profile} />\n              <ProfileAbout profile={profile} />\n              <div className=\"profile-exp bg-white p-2\">\n                <h2 className=\"text-primary\">Experience</h2>\n                {profile.experience.length > 0 ? (\n                  <Fragment>\n                    {profile.experience.map((experience) => (\n                      <ProfileExperience\n                        key={experience._id}\n                        experience={experience}\n                      />\n                    ))}\n                  </Fragment>\n                ) : (\n                    <h4>No experience credentials</h4>\n                  )}\n              </div>\n\n              <div className=\"profile-edu bg-white p-2\">\n                <h2 className=\"text-primary\">Education</h2>\n                {profile.education.length > 0 ? (\n                  <Fragment>\n                    {profile.education.map((education) => (\n                      <ProfileEducation\n                        key={education._id}\n                        education={education}\n                      />\n                    ))}\n                  </Fragment>\n                ) : (\n                    <h4>No education credentials</h4>\n                  )}\n              </div>\n\n              {profile.githubusername && (\n                <ProfileGithub username={profile.githubusername} />\n              )}\n            </div>\n          </Fragment>\n        )}\n    </Fragment>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport formatDate from '../../utils/formatDate';\nimport { connect } from 'react-redux';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  deletePost,\n  auth,\n  post: { _id, text, name, avatar, user, likes, comments, date },\n  showActions\n}) => (\n  <div className=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className=\"my-1\">{text}</p>\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\n\n      {showActions && (\n        <Fragment>\n          <button\n            onClick={() => addLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-up\" />{' '}\n            <span>{likes.length > 0 && <span>{likes.length}</span>}</span>\n          </button>\n          <button\n            onClick={() => removeLike(_id)}\n            type=\"button\"\n            className=\"btn btn-light\"\n          >\n            <i className=\"fas fa-thumbs-down\" />\n          </button>\n          <Link to={`/posts/${_id}`} className=\"btn btn-primary\">\n            Discussion{' '}\n            {comments.length > 0 && (\n              <span className=\"comment-count\">{comments.length}</span>\n            )}\n          </Link>\n          {!auth.loading && user === auth.user._id && (\n            <button\n              onClick={() => deletePost(_id)}\n              type=\"button\"\n              className=\"btn btn-danger\"\n            >\n              <i className=\"fas fa-times\" />\n            </button>\n          )}\n        </Fragment>\n      )}\n    </div>\n  </div>\n);\n\nPostItem.defaultProps = {\n  showActions: true\n};\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { addLike, removeLike, deletePost })(\n  PostItem\n);","import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from './types';\n\n// Get posts\nexport const getPosts = () => async dispatch => {\n  try {\n    const res = await api.get('/posts');\n\n    dispatch({\n      type: GET_POSTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add like\nexport const addLike = id => async dispatch => {\n  try {\n    const res = await api.put(`/posts/like/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Remove like\nexport const removeLike = id => async dispatch => {\n  try {\n    const res = await api.put(`/posts/unlike/${id}`);\n\n    dispatch({\n      type: UPDATE_LIKES,\n      payload: { id, likes: res.data }\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete post\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.delete(`/posts/${id}`);\n\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n\n    dispatch(setAlert('Post Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add post\nexport const addPost = formData => async dispatch => {\n  try {\n    const res = await api.post('/posts', formData);\n\n    dispatch({\n      type: ADD_POST,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Post Created', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Get post\nexport const getPost = id => async dispatch => {\n  try {\n    const res = await api.get(`/posts/${id}`);\n\n    dispatch({\n      type: GET_POST,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Add comment\nexport const addComment = (postId, formData) => async dispatch => {\n  try {\n    const res = await api.post(`/posts/comment/${postId}`, formData);\n\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data\n    });\n\n    dispatch(setAlert('Comment Added', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// Delete comment\nexport const deleteComment = (postId, commentId) => async dispatch => {\n  try {\n    await api.delete(`/posts/comment/${postId}/${commentId}`);\n\n    dispatch({\n      type: REMOVE_COMMENT,\n      payload: commentId\n    });\n\n    dispatch(setAlert('Comment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: POST_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addPost } from '../../actions/post';\n\nconst PostForm = ({ addPost }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Say Something...</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault();\n          addPost({ text });\n          setText('');\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Create a post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nPostForm.propTypes = {\n  addPost: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addPost }\n)(PostForm);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport PostItem from './PostItem';\nimport PostForm from './PostForm';\nimport { getPosts } from '../../actions/post';\n\nconst Posts = ({ getPosts, post: { posts } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <Fragment>\n      <h1 className=\"large text-primary\">Posts</h1>\n      <p className=\"lead\">\n        <i className=\"fas fa-user\" /> Welcome to the community\n      </p>\n      <PostForm />\n      <div className=\"posts\">\n        {posts.map((post) => (\n          <PostItem key={post._id} post={post} />\n        ))}\n      </div>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\n\nconst CommentForm = ({ postId, addComment }) => {\n  const [text, setText] = useState('');\n\n  return (\n    <div className='post-form'>\n      <div className='bg-primary p'>\n        <h3>Leave a Comment</h3>\n      </div>\n      <form\n        className='form my-1'\n        onSubmit={e => {\n          e.preventDefault();\n          addComment(postId, { text });\n          setText('');\n        }}\n      >\n        <textarea\n          name='text'\n          cols='30'\n          rows='5'\n          placeholder='Comment the post'\n          value={text}\n          onChange={e => setText(e.target.value)}\n          required\n        />\n        <input type='submit' className='btn btn-dark my-1' value='Submit' />\n      </form>\n    </div>\n  );\n};\n\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { addComment }\n)(CommentForm);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport formatDate from '../../utils/formatDate';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment\n}) => (\n  <div className=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img className=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p className=\"my-1\">{text}</p>\n      <p className=\"post-date\">Posted on {formatDate(date)}</p>\n      {!auth.loading && user === auth.user._id && (\n        <button\n          onClick={() => deleteComment(postId, _id)}\n          type=\"button\"\n          className=\"btn btn-danger\"\n        >\n          <i className=\"fas fa-times\" />\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.string.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);","import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport CommentForm from '../post/CommentForm';\nimport CommentItem from '../post/CommentItem';\nimport { getPost } from '../../actions/post';\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost, match.params.id]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n      <Fragment>\n        <Link to=\"/posts\" className=\"btn\">\n          Back To Posts\n      </Link>\n        <PostItem post={post} showActions={false} />\n        <CommentForm postId={post._id} />\n        <div className=\"comments\">\n          {post.comments.map((comment) => (\n            <CommentItem key={comment._id} comment={comment} postId={post._id} />\n          ))}\n        </div>\n      </Fragment>\n    );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);","import React, { Fragment } from 'react';\n\n\nconst NotFound = () => {\n  return (\n    <Fragment>\n      <h1 className='x-large text primary'>\n        <i className='fas fa-exclamation-triangle' />Page Not Found\n            </h1>\n      <p className='large'>Sorry this page does not exist</p>\n    </Fragment>\n  )\n};\nexport default NotFound;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    render={props =>\n      loading ? (\n        <Spinner />\n      ) : isAuthenticated ? (\n        <Component {...props} />\n      ) : (\n            <Redirect to='/login' />\n          )\n    }\n  />\n);\n\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/Register';\nimport Login from '../auth/Login';\nimport Alert from '../layout/Alert';\nimport Dashboard from '../dashboard/Dashboard';\nimport ProfileForm from '../profile-forms/ProfileForm';\nimport AddExperience from '../profile-forms/AddExperience';\nimport AddEducation from '../profile-forms/AddEducation';\nimport Profiles from '../profiles/Profiles';\nimport Profile from '../profile/Profile';\nimport Posts from '../posts/Posts';\nimport Post from '../post/Post';\nimport NotFound from '../layout/NotFound';\nimport PrivateRoute from '../routing/PrivateRoute';\n\nconst Routes = props => {\n  return (\n    <section className='container'>\n      <Alert />\n      <Switch>\n        <Route exact path='/register' component={Register} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/profiles' component={Profiles} />\n        <Route exact path='/profile/:id' component={Profile} />\n        <PrivateRoute exact path='/dashboard' component={Dashboard} />\n        <PrivateRoute exact path='/create-profile' component={ProfileForm} />\n        <PrivateRoute exact path='/edit-profile' component={ProfileForm} />\n        <PrivateRoute exact path='/add-experience' component={AddExperience} />\n        <PrivateRoute exact path='/add-education' component={AddEducation} />\n        <PrivateRoute exact path='/posts' component={Posts} />\n        <PrivateRoute exact path='/posts/:id' component={Post} />\n        <Route component={NotFound} />\n      </Switch>\n    </section>\n  );\n};\n\nexport default Routes;","import React, { Fragment, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Landing from './components/layout/Landing';\nimport Routes from './components/routing/Routes';\nimport { LOGOUT } from './actions/types';\nimport './App.css';\n\nimport { Provider } from 'react-redux';\n// Redux\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nconst App = () => {\n  useEffect(() => {\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n    store.dispatch(loadUser());\n\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Fragment>\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Landing} />\n            <Route component={Routes} />\n          </Switch>\n        </Fragment>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}